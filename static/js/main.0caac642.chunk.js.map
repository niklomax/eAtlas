{"version":3,"sources":["geojsonutils.js","components/MultiSelect.jsx","notes.md","components/showcases/util_quant.js","components/Card.jsx","components/DataInput.jsx","components/MapboxBaseLayers.jsx","components/RBAlert.jsx","components/ColourPicker.jsx","components/Modal.jsx","components/showcases/factory.js","components/showcases/GenericPlotly.jsx","components/showcases/plots.jsx","components/boxplot/Boxplot.jsx","components/decksidebar/DeckSidebar.jsx","components/showcases/Widgets.jsx","components/showcases/HexbinSeries.jsx","components/decksidebar/HexPlot.jsx","components/decksidebar/DeckSidebarContainer.jsx","history.js","components/Tooltip.jsx","Welcome.js","components/Header.jsx","About.js","components/DynamicImport.jsx","App.js","registerServiceWorker.js","index.js","icon-cluster-layer.js","components/customlayers/BarLayer.js","utils.js","components/showcases/SeriesPlot.jsx","JSUtils.js","components/File.jsx","components/URL.jsx","components/Variables.jsx","components/Table.jsx","components/UI.js","Constants.js","components/TreeMap.jsx","components/AddVIS.jsx","img/location-icon-atlas.png"],"names":["DateTime","require","sfType","geojson","type","geometry","describeFeatureVariables","feature","description","Object","keys","properties","forEach","key","v_type","String","value","isStringDate","Date","isNumber","Number","isBoolean","Boolean","isObject","getPropertyValues","property","features","all","values","Set","each","add","Array","from","propertyCount","data","list","sub_data","list_copy","length","i","indexOf","x","y","propertyCountByProperty","key2","year","props","k2","getFullYear","assign","coordsAsXY","sizeProperty","map","result","coordinates","size","fromFormat","isValid","fromISO","fromHTTP","fromMillis","useState","setValue","onSelectCallback","filter","multiVarSelect","title","single","options","labelKey","valueKey","placeholder","maxDropdownHeight","TYPE","search","multi","onChange","e","what","selected","module","exports","URL","PRD_URL","fetchQuant","callback","fullURL","fetchData","error","console","log","collection","map_code_point","JSON","parse","f","msoa11cd","line","helpers","origin_msoacode","destination_msoacode","base","hs2","push","headerImage","image","body","onClick","loadCallback","overrides","BaseButton","style","width","button","csv2geojson","partURL","React","isOpen","setOpen","urlCallback","toggleOpen","kind","KIND","secondary","SIZE","compact","s","onClose","url","File","contentCallback","text","name","split","match","json","err","flexGridColumnCount","flexGridColumnGap","flexGridRowGap","process","NO_CARDS","info","SPENSER","api","QUANT","itemProps","Card","apiURL","undefined","cards","display","alignItems","justifyContent","MapboxBaseLayers","state","bases","this","MultiSelect","id","setState","Component","ToastAlert","timeDuration","dismissTimeoutId","clearTimeout","nextProps","alert","time","dismissTimeout","setTimeout","content","Alert","border","background","color","textAlign","variant","ColorPicker","colourCallback","className","colorRangeNames","backgroundColor","open","component","margin","cursor","fontSize","eventNames","updateEvents","isBrowser","window","Plot","Plotly","PlotlyComponent","p","Promise","resolve","resizeHandler","handlers","syncWindowResize","bind","syncEventHandlers","attachUpdateEvents","getRef","handleUpdate","figureCallback","updatePlotly","shouldInvokeResizeHandler","figureCallbackFunction","shouldAttachUpdateEvents","then","unmounting","el","Error","react","layout","config","frames","catch","onError","onInitialized","prevProps","numPrevFrames","numNextFrames","figureChanged","revisionDefined","revision","revisionChanged","onUpdate","onPurge","removeEventListener","removeUpdateEvents","purge","removeListener","updateEvent","on","_transitionData","_frames","invoke","useResizeHandler","Plots","resize","addEventListener","debug","gd","eventName","prop","handler","hasHandler","addEventHandler","removeEventHandler","getPlotlyEventName","toLowerCase","divId","ref","propTypes","PropTypes","func","defaultProps","position","createPlotlyComponent","height","dark","xaxis","yaxis","displayModeBar","axes","visible","sColor","isArray","font","t","r","b","l","paper_bgcolor","plot_bgcolor","legend","orientation","W","PLOT_W","arrayOfYearAndProperty","column","notEmpty","plot_data_multi","n","Math","floor","random","timeCols","mf","Male","Female","lineAttrs","marginLeft","marginTop","plotStyle","isNumeric","H","data_sorted","sort","ascending","convertRange","oldMax","oldMin","newMax","newMin","q1","quantile","toFixed","median","q3","interQuantileRange","min","max","outliers","scale","item","idx","d","maxWidth","stroke","lineColor","x1","x2","y1","yMiddle","y2","strokeWidth","Y","yHeight","fill","fillColor","cx","cy","opacity","v","DeckSidebar","radius","elevation","reset","barChartVariable","datasetName","nextState","loading","subsetBoundsChange","onChangeRadius","onChangeElevation","unfilteredData","toggleSubsetBoundsChange","onlocationChange","toggleHexPlot","severity_data","columnDomain","columnData","xyObjectByProperty","sortNumericArray","showLegend","generateLegend","domain","humanize","columnPlot","resetState","urlOrName","RBAlert","DataInput","Modal","date","years","YEAR","sublist","suggested","yearSlider","changes","percentDiv","has","clear","Boxplot","Tabs","defaultActiveKey","Tab","eventKey","AddVIS","data_by_prop","hasOwnProperty","GenericPlotly","showgrid","marker","TURQUOISE_RANGE","plotByProperty","mode","showlegend","a","scaleSequential","plotByPropertyByDate","isEmptyOrSpaces","layerStyle","newBarChartVar","SeriesPlot","VerticalBarSeries","onValueClick","datapoint","onDragSelected","datapoints","marginBottom","noYAxis","sex_of_casualty","mf_array_male","mf_array_female","x0","y0","left","tickSize","tickFormat","fontWeight","format","items","popPyramidPlot","step","LAYERSTYLES","Checkbox","Variables","mvs","onSubmit","preventDefault","searchNominatom","bbox","boundingbox","num","lon","lat","FormGroup","InputGroup","FormControl","target","Addon","Glyphicon","glyph","HexHeatmap","hoveredNode","offset","bottom","onMouseLeave","animation","strokeLinejoin","colorRange","noXAxis","tickLabelAngle","isMobile","useEffect","toUpperCase","marginRight","hex","setHex","o","h","HexPlot","createBrowserHistory","Tooltip","_listPropsAndValues","_handleWindowSizeChange","forceUpdate","topx","topy","hoveredObject","column1","column2","type_feature","cluster","severity_data_separate","severity_keys","points","source","severity_by_year","w","innerWidth","innerHeight","n_topy","n_left","top","point_count","tickformat","DATA","slice","columns","defualtURL","Constants","gradient","Welcome","_resize","init","DECKGL_INIT","param","getParamsFromSearch","location","iKey","startsWith","layers","backgroundImage","mapStyle","initialViewState","lastViewPortChange","colourName","iconLimit","tooltipColumns","_generateLayer","_renderTooltip","_fetchAndUpdateState","_fitViewport","aURL","customError","isURL","cn","coords","filtered","geomType","nextValue","_","difference","flat","switchToIcon","cellSize","elevationScale","lightSettings","LIGHT_SETTINGS","colorRanges","columnNameOrIndex","getPosition","getColor","getPath","includes","object","getSourcePosition","getTargetPosition","colArray","getMax","getMin","getWidth","generateDomain","getFillColor","COLOR_RANGE","colorScale","getRotationAngle","getScale","alayer","generateDeckLayer","tooltip","road_type","newData","bboxLonLat","bounds","center","centroid","fitBounds","padding","viewport","longitude","latitude","transitionDuration","transitionInterpolator","FlyToInterpolator","params","zoom","bearing","pitch","altitude","history","getBounds","box","getBbx","xmin","ymin","xmax","ymax","zIndex","visibility","endsWith","getMap","onViewportChange","_updateURL","viewState","layer","DeckSidebarContainer","url_returned","geojson_returned","message","navs","to","withRouter","setDark","Navbar","inverse","collapseOnSelect","Header","Brand","Link","viewBox","version","xmlns","xlink","ATILOGO","Toggle","Collapse","Nav","NavItem","pullRight","href","toggleTheme","aria-hidden","transform","fill-rule","clip-rule","About","markdown","readmePath","fetch","response","marked","dangerouslySetInnerHTML","__html","DynamicImport","load","default","children","engine","Styletron","DUI","App","BrowserRouter","basename","theme","DarkTheme","LightTheme","Switch","Route","exact","path","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","IconClusterLayer","changeFlags","somethingChanged","oldProps","rebuildIndex","dataChanged","sizeScale","index","Supercluster","maxZoom","z","context","getClusters","pickedObject","objects","getLeaves","cluster_id","iconAtlas","iconMapping","IconLayer","getSubLayerProps","getIcon","getSize","CompositeLayer","BarLayer","vs","fs","modules","project32","picking","getAttributeManager","addInstanced","instancePositions","GL","DOUBLE","accessor","instanceRadius","defaultValue","instanceColors","UNSIGNED_BYTE","smoothRadius","normalized","instanceScale","instanceRotationAngle","instanceWidth","extensionsChanged","gl","model","delete","_getModel","uniforms","setUniforms","draw","Model","getShaders","Geometry","drawMode","TRIANGLE_STRIP","vertexCount","attributes","positions","Float32Array","isInstanced","Layer","layerName","getRadius","noNulls","Map","isNumValue","get","set","sortedArray","scaleThreshold","range","renderTooltip","addOptionsToObject","opt","obj","hexObj","pickable","extruded","onHover","HexagonLayer","scatterObj","radiusScale","radiusMinPixels","radiusMaxPixels","sqrt","exits","ScatterplotLayer","geojsonObj","stroked","filled","lineWidthScale","lineWidthMinPixels","getLineWidth","getElevation","valuePerSqm","GeoJsonLayer","iconObj","atlas","mapping","wrapLongitude","sgridObject","cellSizePixels","ScreenGridLayer","gridObject","GridLayer","lineObject","LineLayer","arcObject","ArcLayer","pathObject","PathLayer","heatObject","HeatmapLayer","scatterObject","textObject","TextLayer","barvisObject","oldValue","qsResult","qs","replace","lng","isNaN","pit","bea","alt","_sw","_ne","suggestUIforNumber","number","UI_LIST","str","frags","charAt","join","shortenName","parseFloat","toString","isString","shortened","trim","extension","pop","substring","cb","float","createElement","host","check","userAgent","vendor","opera","test","substr","alpha","rgb","interpolateOrRd","yellowblue","greens","oranges","diverge","inverseDefault","fillRule","data-svg-origin","interpolate","jMax","jMin","domainIsNumeric","array","arr","reduce","Infinity","OSMTILES","FlexibleXYPlot","makeWidthFlexible","XYPlot","hint","setHint","setX","setY","setX1","setY1","rect","setRect","setSelected","ReactSeries","MarkSeries","noLimit","dataWithColor","onMouseDown","clientX","clientY","onMouseMove","newX","newY","abs","onMouseUp","onMouseOut","xType","duration","tickValues","onNearestX","innerX","isWithinRect","colorDomain","constructor","isDate","prototype","call","getTime","sanitizeFloat","sanitizeInt","parseInt","sanitizeString","string","sanitizeStringNonNull","sanitizeBool","bool","Uploader","progressAmount","handleDrop","acceptedFiles","rejectedFiles","file","reader","FileReader","onload","readAsText","startProgress","intervalId","setInterval","clearInterval","onCancel","onDrop","progressMessage","setUrl","onKeyPress","event","which","setColumns","dataCols","syncColumns","concat","columnsArray","columnValues","DataTable","currentPage","setCurrentPage","numPages","rows","onPageChange","nextPage","UI","checks","steps","new_checks","ui_name","ui_returned","checked","initialState","define","defineProperty","enumerable","lightsPosition","ambientRatio","diffuseRatio","specularRatio","lightsStrength","numberOfLights","FlexibleTreemap","Treemap","TreeMap","setHoveredNode","treeProps","damping","stiffness","onLeafMouseOver","onLeafMouseOut","getLabel","VIS","generateVIS","vis","counts","HorizontalBarSeries","LineSeries","setColumn","setVis","setList","noAccordion","plot","j","expanded"],"mappings":"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","file":"static/js/main.0caac642.chunk.js","sourcesContent":["import {\n  isNumber, isBoolean, isObject, isString\n} from './JSUtils';\n\nconst { DateTime } = require(\"luxon\");\n\n// thanks turfjs\n//http://wiki.geojson.org/GeoJSON_draft_version_6\nconst sfType = (geojson) => {\n  if (geojson.type === \"FeatureCollection\") { return \"FeatureCollection\"; }\n  if (geojson.type === \"GeometryCollection\") { return \"GeometryCollection\"; }\n  if (geojson.type === \"Feature\" && geojson.geometry !== null) {\n    return geojson.geometry.type;\n  }\n  return geojson.type;\n}\n\nconst properties = (geojson) => {\n  if (!geojson || !geojson.features) return null;\n  var properties = geojson.features[0].properties;\n  return Object.keys(properties);\n}\n\n/**\n * Find all columns which can be considered as key/unique columns.\n * Using `getPropertyValues` we compare the length with\n * geojson objects and determin which olumn can be considered as key.\n * \n * @param {Object} geojson to process\n * @returns array of keys or null if none.\n */\nconst getKeyColumns = (geojson) => {\n  if (!geojson || !geojson.features) return null;\n  const keys = [];\n  const all_property_counts = getPropertyValues(geojson);\n  Object.keys(all_property_counts).forEach(column => {\n    if (Array.from(all_property_counts[column]).length ===\n      geojson.features.length) {\n      keys.push(column);\n      // if property values of column === geojson.features\n      // must be unique      \n    }\n  })\n  return keys.length > 0 ? keys : null;\n}\n\n/**\n * Given an array of [E010000001, S010000001] the function checks\n * all values within the array and returns true if all matches\n * pattern for UK ONS codes.\n * See https://en.wikipedia.org/wiki/ONS_coding_system\n * \n * @param {*} array \n */\nconst isONSCode = (array) => {\n  if (!array || array.length === 0) return false;\n  let result = true;\n  array.forEach(e => {\n    if (!isString(e) || e.length !== 9 || !e.match(/^[EWS]\\d{2}.{6}$/)) {\n      result = false;\n    }\n  })\n  return result;\n}\n/**\n * {some: data, another: value}\n * turn it into {some: type, another: type}\n * @param {Object} feature \n */\nconst describeFeatureVariables = (feature) => {\n  if (!feature || feature.type !== 'Feature') return null;\n  const description = {};\n\n  Object.keys(feature.properties).forEach(key => {\n    let v_type = String;\n    const value = feature.properties[key];\n\n    if (isStringDate(value)) {\n      v_type = Date\n    } else if (isNumber(value)) {\n      v_type = Number\n    } else if (isBoolean(value)) {\n      v_type = Boolean\n    } else if (isObject(value)) {\n      v_type = Object\n    }\n    description[key] = v_type;\n  })\n  return (description)\n}\n\n/**\n * This function takes a geojson object and optionally a property\n * it returns a set (in array) object of all values for that property.\n * \n * If no property is given it gets all properties\n * of each feature and adds unique values for each in a Set.\n * \n * @param {Object} geojson \n * @param {String} property \n */\nconst getPropertyValues = (geojson, property) => {\n  if (!geojson || !geojson.features) return null;\n  const all = {}\n  let values = new Set();\n  geojson.features.forEach(feature => {\n    feature.properties && Object.keys(feature.properties) &&\n    Object.keys(feature.properties).forEach((each) => {\n      if (property && property === each) {\n        // if the right property, \n        // add it to the value to be returnd\n        values.add(feature.properties[each])\n      } else {\n        if (typeof (all[each]) === 'object') { // a set\n          all[each].add(feature.properties[each])\n        } else {\n          all[each] = new Set();\n          all[each].add(feature.properties[each])\n        }\n      }\n    })\n  })\n  return property ? Array.from(values) : all;\n}\n\n/**\n * Get a list of {x:property, y:count} objects for a features in \n * a geojson object. The function can return the counts for\n * a specific list provided or it would get all values in \n * the given key/column of the data.\n * \n * @param {Object} data features to loop through. \n * @param {String} key a particular property as key\n * @param {Object} list of values to limit return their counts\n * \n * @returns {Object}\n */\nconst propertyCount = (data, key, list) => {\n  if (!data || !key) return;\n  let sub_data = []; // match it with list\n  let list_copy = list;\n  if (!list || list.length === 0) {\n    list_copy = getPropertyValues({\n      features: data\n    }, key)\n  }\n  data.forEach(feature => {\n    Object.keys(feature.properties).forEach(each => {\n      if (each === key) {\n        // create an array matching given list\n        // if no list match first \n        const i = list_copy.indexOf(feature.properties[each]);\n        if (sub_data[i] &&\n          sub_data[i].x === feature.properties[each]) {\n          sub_data[i].y += 1;\n        }\n        else {\n          sub_data[i] = { x: feature.properties[each], y: 1 };\n        }\n      }\n    });\n  });\n  return sub_data;\n}\n\n/**\n * Generate an object with frequency of values of a particular property, arranged\n * under a different property. Given features = \n * [{p1: a, p2: b, p3: v1},\n * {p1: a, p2: b, p3: v1},\n * {p1: b, p2: a, p3: v2},\n * ].\n * The function returns an object {v1: {a: 2, b: 2}, v2: {a:1, b:1}}\n * \n * @param {Object} data features to loop through. \n * @param {String} key a particular property as key\n * @param {String} key2 a different property as key\n * @param {Boolean} year extract year out of Date string?\n * \n * @returns {Object} \n */\nconst propertyCountByProperty = (data, key, key2, year = true) => {\n  if (!data || !key || !key2 || key === key2) return;\n  let sub_data = {} // create object based on key2 values\n  data.forEach(feature => {\n    const props = feature.properties;\n    if(!props || !Object.keys(props)) return\n    /**\n     * TODO: \n     */\n    const k2 = year && new Date(props[key2]) &&\n    new Date(props[key2]).getFullYear() ? \n    new Date(props[key2]).getFullYear() : props[key2];\n    Object.keys(props).forEach(each => {\n      if (each === key) {\n        // create object based on key2 values\n        if (sub_data[k2] && sub_data[k2][props[each]]) {\n          sub_data[k2][props[each]] += 1;\n        }\n        else {\n          sub_data[k2] = Object.assign(\n            sub_data[k2] || {}, { [props[each]]: 1 }\n          );\n        }\n      }\n    });\n  });\n  return sub_data;\n}\n\nconst coordsAsXY = (geojson, sizeProperty) => {\n  if (!geojson.features) return null;\n  return (\n    geojson.features.map(each => {\n      // lon lat please\n      const result = {\n        x: each.geometry.coordinates[0],\n        y: each.geometry.coordinates[1]\n      }\n      if (sizeProperty && each.properties[sizeProperty]) {\n        result.size = each.properties[sizeProperty]\n      }\n      return (result)\n    })\n  )\n}\n\nexport {\n  describeFeatureVariables,\n  propertyCountByProperty,\n  getPropertyValues,\n  getKeyColumns,\n  propertyCount,\n  isStringDate,\n  properties,\n  coordsAsXY,\n  isONSCode,\n  sfType\n}\n\nfunction isStringDate(value) {\n  return DateTime.fromFormat(value + '', 'MMMM dd yyyy').isValid ||\n    DateTime.fromFormat(value + '', 'MMMM d yyyy').isValid ||\n    DateTime.fromFormat(value + '', 'MMM d yyyy').isValid ||\n    DateTime.fromFormat(value + '', 'MMM dd yyyy').isValid ||\n    DateTime.fromFormat(value + '', 'dd/MM/yyyy').isValid ||\n    DateTime.fromFormat(value + '', 'dd-MM-yyyy').isValid ||\n    DateTime.fromFormat(value + '', 'yyyy/mm/dd').isValid ||\n    DateTime.fromFormat(value + '', 'yyyy-mm-dd').isValid ||\n    DateTime.fromISO(value).isValid || // \"19-2-1999\"\n    DateTime.fromHTTP(value).isValid ||\n    (typeof value === Number && DateTime.fromMillis(value).isValid);\n}\n","import React, { useState } from 'react';\nimport { Select, TYPE } from 'baseui/select';\n\nexport default (props) => {\n  const [value, setValue] = useState([]);\n  const { onSelectCallback, values, filter, multiVarSelect,\n    title, single } = props;  \n  return (\n    <Select\n      options={values}\n      labelKey=\"id\"\n      valueKey=\"value\"\n      placeholder={title || \"Choose\"}\n      maxDropdownHeight=\"300px\"\n      type={TYPE.search}\n      multi={!single}\n      onChange={({ value }) => {\n        setValue(value);\n        if (multiVarSelect) {\n          Object.keys(value).length === 0 ? delete multiVarSelect[filter] :\n            // everytime it gives back the chosen list of objects\n            multiVarSelect[filter] = new Set(value.map(e => e.value));\n          typeof onSelectCallback === 'function' &&\n            onSelectCallback(Object.keys(multiVarSelect).length === 0 ?\n              { what: '' } : { what: 'multi', selected: multiVarSelect });\n        } else {\n          typeof onSelectCallback === 'function' &&\n          onSelectCallback(value)\n        }\n      }}\n      value={props.value || value}\n    />\n  );\n};","module.exports = __webpack_public_path__ + \"static/media/notes.d652360a.md\";","import * as helpers from '@turf/helpers';\n\nimport { fetchData } from '../../utils';\nimport { DEV_URL, PRD_URL } from '../../Constants';\n\nconst URL = (process.env.NODE_ENV === 'development' ? DEV_URL : PRD_URL);\n\n  /**\n   * The logic here is simple even if the code is not:\n   * Unique object of all \"geography\" with corresponding code in data[1]\n   * \n   * Then using turfjs generate geojson features using data[0] (json) values\n   * and \"geography\" from the data[1].\n   * \n   * Then return the \"collection\"\n   */\n\nconst fetchSPENSER = (callback) => {\n  const fullURL = URL + '/api/spenser2';\n  fetchData(fullURL, (data, error) => {\n    console.log(data.length);\n    \n    if (!error && data[1]) {\n      console.log(JSON.parse(data[1]))\n      let collection = [];\n      const map_code_point = {}\n      JSON.parse(data[1]).features.forEach(f => {\n        map_code_point[f.properties.Area] =\n          f.geometry.coordinates\n      })\n      for (let index = 0; index < data[0].length; index++) {\n        let e = data[0][index]; //just too large for forEach.\n        const line = helpers.multiPolygon(\n          map_code_point[e.c] // in the data Area is c for code\n          , //properties next\n          { code:e.c, age:e.a, sex: e.s, ethnicity: e.e, year: e.y }\n        )        \n        collection.push(line)\n      }\n      collection = helpers.featureCollection(collection);\n      console.log(collection);\n      \n      callback && callback(collection)\n    } else {\n      console.log(error);\n    }\n  })\n}\n\nconst fetchQuant = (callback) => {\n  const fullURL = URL + '/api/quant';\n  // console.log(fullURL);\n\n  fetchData(fullURL, (data, error) => {\n    if (!error && data.length == 2) {\n      // console.log(JSON.parse(data[1]))\n      let collection = [];\n      const map_code_point = {}\n      JSON.parse(data[1]).features.forEach(f => {\n        map_code_point[f.properties.msoa11cd] =\n          f.geometry.coordinates\n      })\n      data[0].forEach(e => {\n        const line = helpers.lineString([\n          map_code_point[e.origin_msoacode],\n          map_code_point[e.destination_msoacode],\n        ], //properties next\n          { base: +(e.base), hs2: +(e.data) }\n        )\n        if (line.geometry.coordinates[0] && line.geometry.coordinates[1]) {\n          collection.push(line)\n        }\n      })\n      collection = helpers.featureCollection(collection);\n      // console.log(collection);\n      \n      callback && callback(collection, fullURL)\n    } else {\n      console.log(error);\n    }\n  })\n}\nexport {\n  fetchSPENSER,\n  fetchQuant\n}","import * as React from 'react';\nimport {\n  Card,\n  StyledBody,\n  StyledAction,\n} from 'baseui/card';\nimport { Button } from 'baseui/button';\nexport default (props) => {\n  if (!props) {\n    return null;\n  }\n  return (\n    <Card\n      // overrides={{ Root: { style: { width: props.width || '128px' } } }}\n      headerImage={props.image}\n      title={props.title}\n    >\n      <StyledBody>\n        {props.body}\n      </StyledBody>\n      <StyledAction>\n        <Button\n          onClick={() => typeof props.loadCallback === 'function' &&\n            props.loadCallback()}\n          overrides={{ BaseButton: { style: { width: '100%' } } }}>\n          {props.button}\n        </Button>\n      </StyledAction>\n    </Card>\n  );\n}","import * as React from 'react';\nimport { Button, KIND, SIZE } from 'baseui/button';\nimport {\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  ModalButton,\n  FocusOnce,\n} from 'baseui/modal';\nimport { FlexGrid, FlexGridItem } from 'baseui/flex-grid';\nimport { fetchQuant } from './showcases/util_quant';\n\nimport File from './File'\nimport URL from './URL';\nimport Card from './Card';\nimport { DEV_URL, PRD_URL } from '../Constants';\n\n/**\n * The package is by mapbox. \n * \n * GDAL specs have been taken into consideration according to\n * package docs. The package creats lines and polygons from \n * correct csv files.\n * \n * There has been good effort into guessing the naming of\n * lat/longs, see \n * https://github.com/mapbox/csv2geojson/blob/gh-pages/index.js\n * \n * From the package\n * var latRegex = /(Lat)(itude)?/gi,\n *  lonRegex = /(L)(on|ng)(gitude)?/i;\n * \n */\nconst csv2geojson = require('csv2geojson');\n\nconst partURL = (process.env.NODE_ENV === 'development' ? DEV_URL : PRD_URL);\n\nexport default function (props) {\n  const [isOpen, setOpen] = React.useState(false);\n  const { urlCallback, toggleOpen } = props;\n\n  function cards() {\n    const info = {\n      // SPENSER2: {\n      //   image: \"images/spenser.png\",\n      //   body: \"SPENSER Manchester 2011 - 2020.\",\n      //   api: fetchSPENSER\n      // },\n      SPENSER: {\n        image: \"images/spenser.png\",\n        body: \"SPENSER Cambridge sample.\",\n        api: partURL + '/api/spenser'\n      },\n      QUANT: {\n        image: \"images/quant.png\",\n        body: \"QUANT HS2 scenario example.\",\n        api: fetchQuant // a function\n      },\n    };\n    return (Object.keys(info).map(key =>\n      <FlexGridItem key={key} {...itemProps}>\n        {\n          <Card button=\"Load\" title={key} image={info[key]['image']}\n            body={info[key]['body']} loadCallback={() => {\n              const api = info[key]['api'];\n              // if api is function call and provied\n              // geojson returned in case of quant for instance.\n              api && typeof (api) === 'function' ?\n                api((geojson, apiURL) => urlCallback(undefined, geojson, apiURL)) :\n                typeof (urlCallback) === 'function'\n                && urlCallback(api)\n              setOpen(false);\n            }} />\n        }\n      </FlexGridItem>\n\n    ))\n  }\n\n\n  return (\n    <React.Fragment>\n      <Button\n        kind={KIND.secondary} size={SIZE.compact}\n        onClick={() => {\n          setOpen(s => !s); // or s === isOpen\n          typeof toggleOpen === 'function' && toggleOpen()\n        }}>Add data</Button>\n      <Modal\n        onClose={() => {\n          typeof (toggleOpen) === 'function' && toggleOpen()\n          setOpen(false);\n        }}\n        isOpen={isOpen}>\n        <ModalHeader>Your data remains on your browser. It is NOT uploaded anywhere.</ModalHeader>\n        <ModalBody>\n          <FocusOnce>\n            <URL urlCallback={(url) => {\n              setOpen(false);\n              typeof (urlCallback) === 'function'\n                && urlCallback(url)\n            }} />\n          </FocusOnce>\n          <File contentCallback={({ text, name }) => {\n            if (name && (name.split(\".\")[1].match(/geo/) //test.json\n              || name.split(\".\")[1].match(/json/))) {\n              try {\n                const json = JSON.parse(text);\n                typeof (urlCallback) === 'function'\n                  && urlCallback(null, json, name)\n                setOpen(false);\n              } catch (e) {\n                console.log(e);\n              }\n            } else {\n              // err has any parsing errors\n              csv2geojson.csv2geojson(text, (err, data) => {\n                if (!err) {\n                  typeof (urlCallback) === 'function'\n                    && urlCallback(null, data, name)\n                }\n              });\n            }\n          }} />\n          <FlexGrid\n            flexGridColumnCount={3}\n            flexGridColumnGap=\"scale800\"\n            flexGridRowGap=\"scale800\"\n          >\n            {!process.env.NO_CARDS && cards()}\n          </FlexGrid>\n        </ModalBody>\n        <ModalFooter>\n          <ModalButton onClick={() => {\n            setOpen(false);\n            typeof (toggleOpen) === 'function' && toggleOpen();\n          }}>Close</ModalButton>\n        </ModalFooter>\n      </Modal>\n    </React.Fragment >\n  );\n}\n\nconst itemProps = {\n  // backgroundColor: 'mono300',\n  // height: 'scale1000',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n};","import React from 'react';\nimport MultiSelect from './MultiSelect';\n\nexport default class MapboxBaseLayers extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            bases: [\n                'dark',\n                'basic',\n                'streets',\n                'bright',\n                'light',\n                'satellite',\n                'No map'\n            ],\n            selected: 'dark'\n        }\n    }\n\n    render() { \n        const {selected, bases} = this.state;\n        const {onSelectCallback} = this.props;\n        \n        return(\n          <MultiSelect \n          title={selected === 'dark' ? \"Default(dark)\" : selected}\n            single={true}\n            values={bases.map(e => ({id:e, value:e}))}\n            onSelectCallback= {(selected) => {\n              const base = selected && selected[0] ?\n              selected[0].value : this.state.selected;\n              this.setState({selected: base});\n              typeof(onSelectCallback) === 'function' && base &&\n              onSelectCallback(base)\n          }}\n          />\n            // <RBDropDown\n            //     title={selected === 'dark' ? \"Default(dark)\" : selected}\n            //     menuitems={bases}\n            //     onSelectCallback= {(selected) => {\n            //         this.setState({selected});\n            //         typeof(onSelectCallback) === 'function' &&\n            //         onSelectCallback(selected)\n            //     }}\n            // />\n        )\n    }\n}","import React, { Component } from 'react';\n\n// react bootstrap\nimport { Alert } from 'react-bootstrap';\n\n// local\n\nclass ToastAlert extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      timeDuration: false\n    }\n  }\n\n  // lifeCycles\n  //-----------------------------------------------\n  componentWillUnmount() {\n    if (this.dismissTimeoutId) clearTimeout(this.dismissTimeoutId)\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (!nextProps.alert) return;\n    const oldId = this.props.alert;\n    const newId = nextProps.alert;\n    if (oldId !== newId) {\n      const { time } = nextProps.alert;\n      this.setState({\n        timeDuration: Boolean(alert)\n      },\n        () => {\n          this.dismissTimeout = setTimeout(() => this.setState({ timeDuration: false }),\n            time || 3000)\n        });\n    }\n  }\n\n  // local methods\n\n  // render\n  render() {\n    const { alert } = this.props;\n    const { timeDuration } = this.state;\n\n    if (!timeDuration || !alert || !alert.content)\n      return null;\n\n    else {\n      return (\n        <Alert style={{\n          border: 'none',\n          background: '#f8d7da',\n          color: '#721c24',\n          textAlign: 'center'\n        }} variant={\"danger\"} >\n          {alert.content}\n        </Alert>\n      )\n\n    }\n  }\n}\nexport default ToastAlert;\n","import React from 'react';\nimport { colorRangeNames} from '../utils';\n\nexport default function ColorPicker(props) {\n  const { colourCallback } = props;\n  return (\n    <div className=\"color-picker-container\">\n      <p>Color range:</p>\n      {\n        colorRangeNames.map((each, i) => {\n            return (\n              <div\n                key={each}\n                style={{\n                  backgroundColor: i === 0 ? 'red' :\n                    i === 1 ? 'blue' : i === 2 ? 'green' :\n                      i === 3 ? 'orange' : i === 4 ? 'brown' : 'yellow'\n                }}\n                className=\"color-box\"\n                onClick={() => {                  \n                  typeof colourCallback === 'function' &&\n                    colourCallback(each)\n                }}/>\n            )\n          })\n      }\n    </div>\n  )\n}","import * as React from 'react';\nimport { Button, KIND, SIZE } from 'baseui/button';\nimport {\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n} from 'baseui/modal';\n\nexport default (props) => {\n  const [open, setOpen] = React.useState(false);\n  const { toggleOpen, title, component, button } = props;\n\n  return (\n    <React.Fragment>\n      <i\n        style={{\n          margin: 5,\n          cursor: 'pointer',\n          fontSize: '1.5em'\n        }}\n        onClick={() => {\n          typeof toggleOpen === 'function' && toggleOpen();\n          setOpen(true);\n        }}\n        className={button || \"fa fa-table\"}></i>\n      <Modal size=\"80%\"\n        onClose={() => {\n          typeof (toggleOpen) === 'function' && toggleOpen()\n          setOpen(false);\n        }} isOpen={open}>\n        <ModalHeader>{title}</ModalHeader>\n        <ModalBody>\n          {component}\n        </ModalBody>\n        <ModalFooter>\n          <Button\n            kind={KIND.secondary} size={SIZE.compact}\n            onClick={() => {\n              setOpen(false);\n              typeof (toggleOpen) === 'function' && toggleOpen();\n            }}>Okay</Button>\n        </ModalFooter>\n      </Modal>\n    </React.Fragment>\n  );\n};","/* eslint-disable react/forbid-foreign-prop-types */\nimport React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\n// The naming convention is:\n//   - events are attached as `'plotly_' + eventName.toLowerCase()`\n//   - react props are `'on' + eventName`\nconst eventNames = [\n  'AfterExport',\n  'AfterPlot',\n  'Animated',\n  'AnimatingFrame',\n  'AnimationInterrupted',\n  'AutoSize',\n  'BeforeExport',\n  'BeforeHover',\n  'ButtonClicked',\n  'Click',\n  'ClickAnnotation',\n  'Deselect',\n  'DoubleClick',\n  'Framework',\n  'Hover',\n  'LegendClick',\n  'LegendDoubleClick',\n  'Relayout',\n  'Relayouting',\n  'Restyle',\n  'Redraw',\n  'Selected',\n  'Selecting',\n  'SliderChange',\n  'SliderEnd',\n  'SliderStart',\n  'SunburstClick',\n  'Transitioning',\n  'TransitionInterrupted',\n  'Unhover',\n  'WebGlContextLost',\n];\n\nconst updateEvents = [\n  'plotly_restyle',\n  'plotly_redraw',\n  'plotly_relayout',\n  'plotly_relayouting',\n  'plotly_doubleclick',\n  'plotly_animated',\n  'plotly_sunburstclick',\n];\n\n// Check if a window is available since SSR (server-side rendering)\n// breaks unnecessarily if you try to use it server-side.\nconst isBrowser = typeof window !== 'undefined';\n\nexport default function plotComponentFactory(Plotly) {\n  class PlotlyComponent extends Component {\n    constructor(props) {\n      super(props);\n\n      this.p = Promise.resolve();\n      this.resizeHandler = null;\n      this.handlers = {};\n\n      this.syncWindowResize = this.syncWindowResize.bind(this);\n      this.syncEventHandlers = this.syncEventHandlers.bind(this);\n      this.attachUpdateEvents = this.attachUpdateEvents.bind(this);\n      this.getRef = this.getRef.bind(this);\n      this.handleUpdate = this.handleUpdate.bind(this);\n      this.figureCallback = this.figureCallback.bind(this);\n      this.updatePlotly = this.updatePlotly.bind(this);\n    }\n\n    updatePlotly(shouldInvokeResizeHandler, figureCallbackFunction, shouldAttachUpdateEvents) {\n      this.p = this.p\n        .then(() => {\n          if (this.unmounting) {\n            return;\n          }\n          if (!this.el) {\n            throw new Error('Missing element reference');\n          }\n          // eslint-disable-next-line consistent-return\n          return Plotly.react(this.el, {\n            data: this.props.data,\n            layout: this.props.layout,\n            config: this.props.config,\n            frames: this.props.frames,\n          });\n        })\n        .then(() => {\n          if (this.unmounting) {\n            return;\n          }\n          this.syncWindowResize(shouldInvokeResizeHandler);\n          this.syncEventHandlers();\n          this.figureCallback(figureCallbackFunction);\n          if (shouldAttachUpdateEvents) {\n            this.attachUpdateEvents();\n          }\n        })\n        .catch((err) => {\n          if (this.props.onError) {\n            this.props.onError(err);\n          }\n        });\n    }\n\n    componentDidMount() {\n      this.unmounting = false;\n\n      this.updatePlotly(true, this.props.onInitialized, true);\n    }\n\n    componentDidUpdate(prevProps) {\n      this.unmounting = false;\n\n      // frames *always* changes identity so fall back to check length only :(\n      const numPrevFrames =\n        prevProps.frames && prevProps.frames.length ? prevProps.frames.length : 0;\n      const numNextFrames =\n        this.props.frames && this.props.frames.length ? this.props.frames.length : 0;\n\n      const figureChanged = !(\n        prevProps.layout === this.props.layout &&\n        prevProps.data === this.props.data &&\n        prevProps.config === this.props.config &&\n        numNextFrames === numPrevFrames\n      );\n      const revisionDefined = prevProps.revision !== void 0;\n      const revisionChanged = prevProps.revision !== this.props.revision;\n\n      if (!figureChanged && (!revisionDefined || (revisionDefined && !revisionChanged))) {\n        return;\n      }\n\n      this.updatePlotly(false, this.props.onUpdate, false);\n    }\n\n    componentWillUnmount() {\n      this.unmounting = true;\n\n      this.figureCallback(this.props.onPurge);\n\n      if (this.resizeHandler && isBrowser) {\n        window.removeEventListener('resize', this.resizeHandler);\n        this.resizeHandler = null;\n      }\n\n      this.removeUpdateEvents();\n\n      Plotly.purge(this.el);\n    }\n\n    attachUpdateEvents() {\n      if (!this.el || !this.el.removeListener) {\n        return;\n      }\n\n      updateEvents.forEach((updateEvent) => {\n        this.el.on(updateEvent, this.handleUpdate);\n      });\n    }\n\n    removeUpdateEvents() {\n      if (!this.el || !this.el.removeListener) {\n        return;\n      }\n\n      updateEvents.forEach((updateEvent) => {\n        this.el.removeListener(updateEvent, this.handleUpdate);\n      });\n    }\n\n    handleUpdate() {\n      this.figureCallback(this.props.onUpdate);\n    }\n\n    figureCallback(callback) {\n      if (typeof callback === 'function') {\n        const {data, layout} = this.el;\n        const frames = this.el._transitionData ? this.el._transitionData._frames : null;\n        const figure = {data, layout, frames};\n        callback(figure, this.el);\n      }\n    }\n\n    syncWindowResize(invoke) {\n      if (!isBrowser) {\n        return;\n      }\n\n      if (this.props.useResizeHandler && !this.resizeHandler) {\n        this.resizeHandler = () => Plotly.Plots.resize(this.el);\n        window.addEventListener('resize', this.resizeHandler);\n        if (invoke) {\n          this.resizeHandler();\n        }\n      } else if (!this.props.useResizeHandler && this.resizeHandler) {\n        window.removeEventListener('resize', this.resizeHandler);\n        this.resizeHandler = null;\n      }\n    }\n\n    getRef(el) {\n      this.el = el;\n\n      if (this.props.debug && isBrowser) {\n        window.gd = this.el;\n      }\n    }\n\n    // Attach and remove event handlers as they're added or removed from props:\n    syncEventHandlers() {\n      eventNames.forEach((eventName) => {\n        const prop = this.props['on' + eventName];\n        const handler = this.handlers[eventName];\n        const hasHandler = Boolean(handler);\n\n        if (prop && !hasHandler) {\n          this.addEventHandler(eventName, prop);\n        } else if (!prop && hasHandler) {\n          // Needs to be removed:\n          this.removeEventHandler(eventName);\n        } else if (prop && hasHandler && prop !== handler) {\n          // replace the handler\n          this.removeEventHandler(eventName);\n          this.addEventHandler(eventName, prop);\n        }\n      });\n    }\n\n    addEventHandler(eventName, prop) {\n      this.handlers[eventName] = prop;\n      this.el.on(this.getPlotlyEventName(eventName), this.handlers[eventName]);\n    }\n\n    removeEventHandler(eventName) {\n      this.el.removeListener(this.getPlotlyEventName(eventName), this.handlers[eventName]);\n      delete this.handlers[eventName];\n    }\n\n    getPlotlyEventName(eventName) {\n      return 'plotly_' + eventName.toLowerCase();\n    }\n\n    render() {\n      return (\n        <div\n          id={this.props.divId}\n          style={this.props.style}\n          ref={this.getRef}\n          className={this.props.className}\n        />\n      );\n    }\n  }\n\n  PlotlyComponent.propTypes = {\n    data: PropTypes.arrayOf(PropTypes.object),\n    config: PropTypes.object,\n    layout: PropTypes.object,\n    frames: PropTypes.arrayOf(PropTypes.object),\n    revision: PropTypes.number,\n    onInitialized: PropTypes.func,\n    onPurge: PropTypes.func,\n    onError: PropTypes.func,\n    onUpdate: PropTypes.func,\n    debug: PropTypes.bool,\n    style: PropTypes.object,\n    className: PropTypes.string,\n    useResizeHandler: PropTypes.bool,\n    divId: PropTypes.string,\n  };\n\n  eventNames.forEach((eventName) => {\n    if(PlotlyComponent.propTypes) {\n      PlotlyComponent.propTypes['on' + eventName] = PropTypes.func;\n    }\n  });\n\n  PlotlyComponent.defaultProps = {\n    debug: false,\n    useResizeHandler: false,\n    data: [],\n    style: {position: 'relative', display: 'inline-block'},\n  };\n\n  return PlotlyComponent;\n}","import React from 'react';\n\nimport { isArray } from '../../JSUtils';\nimport Plotly from \"plotly.js\";\nimport createPlotlyComponent from \"./factory\";\n\nconst Plot = createPlotlyComponent(Plotly);\n/**\n * React Hook generic Plotly plot which takes data in the following format:\n * [\n    {\n      x: [1, 2, 3],\n      y: [2, 6, 3],\n      type: 'scatter',\n      mode: 'lines+markers',\n      marker: { color: 'red' },\n      name: 'fiq',\n    },\n    { \n      x: [1, 2], \n      y: [2, 5],\n      type: 'line', \n      name: 'lush'\n    },\n  ]\n * @param {Object} props \n */\nexport default function(props) {\n  const { data, width = 250, height = 200, title = \"Plot\",\n    dark, xaxis = {}, yaxis = {},\n    displayModeBar } = props; // Object.assign errs on undefined\n  \n  const axes = { visible: true, color: dark && '#fff'}\n  const sColor = {color: dark && '#fff'};\n\n  if (!data || !isArray(data) || data.length === 0) return null\n  return (\n    <Plot\n      data={data}\n      layout={{\n        width, height, title: {text: title, font: sColor},\n        margin: { t: 30, r: 20, b: 50, l: 30 },\n        paper_bgcolor: dark && '#0000', plot_bgcolor: dark && '#0000',\n        xaxis: Object.assign(axes, xaxis), \n        yaxis: Object.assign(sColor, yaxis),\n        legend: {x: 0.35, y: -0.35, orientation: 'h',\n        font: sColor}\n      }}\n      config={{displayModeBar: !displayModeBar && false}}\n    />\n  );\n}","import React from 'react';\nimport {\n  XYPlot, XAxis, YAxis, HorizontalRectSeries,\n  DiscreteColorLegend\n} from 'react-vis';\nimport { format } from 'd3-format';\n\nimport { isStringDate, propertyCountByProperty } from '../../geojsonutils';\nimport { isArray } from '../../JSUtils';\nimport { PLOT_W, TURQUOISE_RANGE } from '../../Constants';\nimport { xyObjectByProperty, humanize } from '../../utils';\nimport { scaleSequential } from 'd3-scale';\n\nimport GenericPlotly from './GenericPlotly';\n\nconst W = PLOT_W,\n  COLOR_F = 'rgb(18, 147, 154)',\n  COLOR_M = 'rgb(239, 93, 40)';\n\n\nconst plotByPropertyByDate = (data, property, dark) => {\n  if (!data || !isArray(data) || !data.length || !property) return null;\n\n  const plot_data_multi = arrayOfYearAndProperty(data, property);\n\n  if(!plot_data_multi) return null;\n\n  return (\n    <GenericPlotly dark={dark}\n      yaxis={{ showgrid: false }}\n      xaxis={{ showgrid: false }}\n      data={\n        plot_data_multi.map((r, i) => ({\n          mode: 'lines',\n          showlegend: false,\n          x: r.map(e => e.x)\n            // TODO: more robust sorting of dates\n            .sort((a, b) => new Date(a) - new Date(b)),\n          y: r.map(e => e.y),\n          name: [\"Male\", \"Female\", \"Total\"][i],\n          marker: { color: scaleSequential(TURQUOISE_RANGE)(i / plot_data_multi.length) }\n        }))} title=\"Sex of Casualty\" />\n  )\n}\n/**\n * \n * @param {Object} data \n * @param {String} property \n * @param {Boolean} dark \n */\nconst plotByProperty = (data, property, dark) => {\n  if (!data || !isArray(data) || !data.length) return null;\n\n  const data_by_prop = data[0].properties.hasOwnProperty(property) &&\n    xyObjectByProperty(data, property)\n  \n  if(!data_by_prop) return null;\n\n  return (\n    <GenericPlotly dark={dark}\n      yaxis={{ showgrid: false }}\n      xaxis={{ showgrid: false }}\n      data={[{\n        // showlegend: false,\n        x: data_by_prop.map(e => +(e.x)),\n        y: data_by_prop.map(e => +(e.y)),\n        marker: { color: TURQUOISE_RANGE[0] }\n      }]}\n      title={humanize(property)} />\n  )\n}\n\n/**\n * Generate a population pyramid using Rect-vis series objects.\n * Series objects are formatted as {left,right,bottom, top}\n * \n * Currently semi hardcoded for sex_of_casualty and date from\n * STATS19 dataset\n * \n * @param {Object} options \n */\nconst popPyramidPlot = (options) => {\n  if (!options || !options.data || !options.data[0] ||\n    !options.data[0].properties.date ||\n    !options.data[0].properties.sex_of_casualty) return;\n  const mf = propertyCountByProperty(options.data, \"sex_of_casualty\", \"date\");\n  const mf_array_male = [];\n  const mf_array_female = [];\n  if (Object.keys(mf).length === 1) return;\n\n  mf && Object.keys(mf).forEach((y, i) => {\n    mf_array_male.push({\n      x: 0,\n      x0: +(mf[y].Male),\n      y: i === 0 ? 0 : i,\n      y0: i + 1,\n      color: \"#428BCA\"\n    })\n  })\n  mf && Object.keys(mf).forEach((y, i) => {\n    mf_array_female.push({\n      x: 0,\n      x0: -1 * (+(mf[y].Female)),\n      y: i === 0 ? 0 : i,\n      y0: i + 1\n    })\n  })\n  return (\n    <>\n      <XYPlot\n        margin={{ left: options.margin || 60 }} // default is 40\n        height={options.plotStyle && options.plotStyle.height || W}\n        width={options.plotStyle && options.plotStyle.width || W} >\n        <HorizontalRectSeries\n          color={COLOR_F}\n          stroke='black'\n          data={mf_array_female} />\n        <HorizontalRectSeries\n          color={COLOR_M}\n          stroke='black'\n          data={mf_array_male} />\n\n        <YAxis\n          tickSize={0}\n          tickFormat={v => v === 0 ? 2009 : v - 2 + 2009}\n          style={{\n            line: { strokeWidth: 0 },\n            text: { fill: options.dark ? '#fff' : '#000', fontWeight: 400 }\n          }}\n        />\n        {/* left={(W / 2) - 10} */}\n        <XAxis\n          tickSize={0}\n          tickFormat={v => format(\".2s\")(v < 0 ? -1 * v : v)}\n          style={{\n            line: { strokeWidth: 0 },\n            text: { fill: options.dark ? '#fff' : '#000', fontWeight: 400 }\n          }}\n        />\n      </XYPlot>\n      <DiscreteColorLegend\n        orientation=\"horizontal\" width={W}\n        items={[\n          { title: \"Male\", color: COLOR_M },\n          { title: \"Female\", color: COLOR_F }\n        ]}\n      />\n    </>\n  )\n}\n\n/**\n * Function looks at date for two properties and generates a react-vis\n * ready two-dimensional array of the two propties. Currently it is semi-hard-coded.\n * \n * A function like this is meant to make converting geojson data object given,\n * to charting library ready format to be consumed.\n * \n * @param {Object} data \n * @param {String} column \n */\nconst arrayOfYearAndProperty = (data, column) => {\n  const notEmpty = isArray(data) && data.length > 0 && column;\n  const plot_data_multi = [[], [], []];\n\n  if (notEmpty) {\n    // return 0 for 1 item array or generate random\n    const n = data.length === 1 ? 0 :\n      Math.floor((Math.random() * (data.length - 1)) + 1);\n    const timeCols = Object.keys(data[n].properties)\n      .filter(each => isStringDate(data[n].properties[each]));\n    if (timeCols.length > 0) {\n      const mf = propertyCountByProperty(data, column, timeCols[0]);\n      // mf === 2009: {Male: 3295, Female: 2294}\n      mf && Object.keys(mf).length > 1 && // more than one years\n        Object.keys(mf)\n          .forEach(y => { // year\n            if (y && mf[y].Male && mf[y].Female) {\n              plot_data_multi[0]\n                .push({\n                  x: y,\n                  y: mf[y].Male\n                });\n              plot_data_multi[1]\n                .push({\n                  x: y,\n                  y: mf[y].Female\n                });\n              plot_data_multi[2]\n                .push({\n                  x: y,\n                  y: mf[y].Male + mf[y].Female\n                })\n            }\n          });\n    }\n  }\n  if(!plot_data_multi[0].length) return null\n  return plot_data_multi;\n}\n\nexport {\n  arrayOfYearAndProperty,\n  plotByPropertyByDate,\n  plotByProperty,\n  popPyramidPlot\n}","import React from 'react';\nimport { ascending, quantile } from 'd3-array';\n\nimport { isNumber } from '../../JSUtils';\nimport { convertRange } from '../../utils';\n\nimport './style.css'\n\nexport default (props) => {\n  const { className, data, marginLeft, marginTop,\n    lineAttrs, plotStyle } = props;\n  if (!data || !Array.isArray(data) || data.length === 0) return null;\n  let isNumeric = true;\n  data.forEach(e => {\n    if (!isNumber(e)) {\n      isNumeric = false\n    }\n  });\n  if (!isNumeric) return null;\n  // proceed\n  const W = 100, H = (plotStyle && plotStyle.height) || 100, limit = 5;\n  // Compute summary statistics used for the box:\n  let data_sorted = data.sort(ascending)\n  data_sorted = data_sorted.map(e => convertRange(e, {\n    oldMax: data_sorted[data_sorted.length - 1],\n    oldMin: data_sorted[0],\n    newMax: W - 5, newMin: 5\n  }))\n\n  let q1 = +quantile(data_sorted, .25).toFixed(2)\n  let median = +quantile(data_sorted, .5).toFixed(2)\n  let q3 = +quantile(data_sorted, .75).toFixed(2)\n  let interQuantileRange = +(q3 - q1).toFixed(2)\n  // https://www.purplemath.com/modules/boxwhisk3.htm\n  let min = +(q1 - 1.5 * interQuantileRange).toFixed(2)\n  let max = +(q1 + 1.5 * interQuantileRange).toFixed(2)\n  const outliers = data_sorted.filter(e => e > max || e < min)\n\n  // rescale variables according to screensize\n  const Y = 5, yHeight = 60, yMiddle = Y + (yHeight / 2);\n\n  // show less on scale depending on settings\n  let scale = data;\n  if (data.length > limit) {\n    scale = [];\n    data.forEach((item, idx) => {\n      let d = Math.floor(data.length / limit);\n      if (d === 1) d = 2;\n      if ((idx % d) === 0) {\n        let l = Math.floor(item);\n        if (l > 1000) l = (l / 1000).toFixed(1) + \"k\"\n        scale.push(l)\n      }\n    })\n  }\n\n  return (\n    <div style={{\n      width: '100%',\n      height: H,\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n    }}>\n      <div style={{\n        width: '100%',\n        height: '100%',\n        maxWidth: '600px',\n      }}>\n        <svg width='100%' height='100%'>\n          <g style={{\n            stroke: (plotStyle && plotStyle.lineColor) || 'rgb(18, 147, 154)'\n          }}>\n            <line\n              x1={min + \"%\"}\n              x2={q1 + \"%\"}\n              y1={yMiddle + \"%\"}\n              y2={yMiddle + \"%\"}\n              {...lineAttrs}\n            />\n            {/* bottom line */}\n            <line\n              style={{ strokeWidth: 1 }}\n              x1={min + \"%\"} x2={min + \"%\"} y1={Y + \"%\"}\n              y2={(Y + yHeight) + \"%\"} {...lineAttrs} />\n            <line\n              x1={max + \"%\"}\n              x2={q3 + \"%\"}\n              y1={yMiddle + \"%\"}\n              y2={yMiddle + \"%\"}\n              {...lineAttrs}\n            />\n            {/* top line */}\n            <line\n              style={{ strokeWidth: 1 }}\n              x1={max + \"%\"} x2={max + \"%\"} y1={Y + \"%\"}\n              y2={(Y + yHeight) + \"%\"} {...lineAttrs} />\n            <rect\n              x={q1 + \"%\"}\n              width={interQuantileRange + \"%\"}\n              y={Y + \"%\"}\n              height={yHeight + \"%\"}\n              fill={(plotStyle && plotStyle.fillColor) || 'rgb(18, 147, 154)'}\n              stroke=\"black 0.5px\"\n            />\n            {/* median */}\n            <line\n              style={{ stroke: 'black', strokeWidth: 1 }}\n              x1={median + \"%\"} x2={median + \"%\"}\n              y1={Y + \"%\"} y2={(Y + yHeight) + \"%\"} {...lineAttrs} />\n            {/* outliers */}\n            {\n              outliers.map((e, i) => <circle\n                key={e + \"-\" + i}\n                r=\"5\"\n                // avoid placing first on top/bottom line\n                cx={(e > max ? e + 2 : e - 2) + \"%\"}\n                cy={yMiddle + \"%\"}\n                style={{\n                  fill: 'none',\n                  opacity: 1\n                }}></circle>)\n            }\n            {/* axis */}\n            {/* <line \n            x1={'5%'} y1=\"80%\" x2={(W - 10) + \"%\"} y2={'80%'} /> */}\n            {\n              scale && scale.map((v, i) => {\n                const x1 = i * (W / scale.length);\n                return (\n                  <g key={x1 + \"-\" + i}>\n                    {/* <line \n                    style={{ stroke: 'white', strokeWidth: 0.5 }}\n                  x1={x1 + \"%\"} y1={\"80%\"} x2={x1} y2={'82%'} /> */}\n                    <text x={(x1 + 2) + \"%\"} y={\"85%\"}\n                      // transform=\"rotate(10)\" style={{textAnchor:\"end\"}}\n                      className=\"d3-axis-labels\">{v}</text>\n                  </g>\n                )\n              })\n            }\n          </g>\n        </svg>\n      </div>\n    </div>\n  )\n}","import React from 'react';\nimport {\n  Tabs, Tab, FormGroup, InputGroup,\n  FormControl, Glyphicon, Checkbox\n} from 'react-bootstrap';\nimport { Button, KIND, SIZE } from 'baseui/button';\n\nimport './DeckSidebar.css';\nimport DataInput from '../DataInput';\nimport MapboxBaseLayers from '../MapboxBaseLayers';\nimport {\n  xyObjectByProperty, percentDiv,\n  searchNominatom,\n  humanize, generateLegend, sortNumericArray\n} from '../../utils';\nimport { VerticalBarSeries } from 'react-vis';\nimport Variables from '../Variables';\nimport RBAlert from '../RBAlert';\nimport { propertyCount } from '../../geojsonutils';\nimport { LAYERSTYLES } from '../../Constants';\nimport ColorPicker from '../ColourPicker';\nimport Modal from '../Modal';\nimport DataTable from '../Table';\n\nimport { yearSlider } from '../showcases/Widgets';\nimport {\n  popPyramidPlot, plotByPropertyByDate,\n  plotByProperty\n} from '../showcases/plots';\nimport SeriesPlot from '../showcases/SeriesPlot';\nimport { isEmptyOrSpaces, isNumber } from '../../JSUtils';\nimport MultiSelect from '../MultiSelect';\nimport AddVIS from '../AddVIS';\nimport Boxplot from '../boxplot/Boxplot';\nimport { Slider } from 'baseui/slider';\n\nexport default class DeckSidebar extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      radius: 100,\n      elevation: 4,\n      year: \"\",\n      reset: false,\n      multiVarSelect: {},\n      barChartVariable: \"road_type\",\n      datasetName: props.datasetName\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const { data, alert, loading } = this.props;\n    const { elevation, radius, reset,\n      barChartVariable } = this.state;\n    // avoid rerender as directly operating on document.get* \n    // does not look neat. Keeping it React way.\n    if (reset !== nextState.reset ||\n      elevation !== nextState.elevation ||\n      radius !== nextState.radius ||\n      alert !== nextProps.alert ||\n      loading !== nextProps.loading ||\n      barChartVariable !== nextState.barChartVariable) return true;\n    //TODO:  a more functional way is needed        \n    if (data && nextProps && nextProps.data &&\n      data.length === nextProps.data.length) {\n      return false\n    }\n    return true;\n  }\n\n  /**\n   * Render the sidebar empty if no data is loaded.\n   * Partly because we like to load from a URL.\n   */\n  render() {\n    const { elevation, radius, year, subsetBoundsChange,\n      multiVarSelect, barChartVariable } = this.state;\n    const { onChangeRadius, onChangeElevation,\n      onSelectCallback, data, colourCallback, unfilteredData,\n      toggleSubsetBoundsChange, urlCallback, alert,\n      onlocationChange, column, dark, toggleOpen, toggleHexPlot } = this.props;\n\n    const notEmpty = data && data.length > 1;\n\n    const severity_data = propertyCount(data, \"accident_severity\");\n    let columnDomain = [];\n    let columnData = notEmpty ?\n      xyObjectByProperty(data, column || barChartVariable) : [];\n    const geomType = notEmpty && data[0].geometry.type.toLowerCase();\n    if (notEmpty && column && (geomType === 'polygon' ||\n      geomType === 'multipolygon' || \"linestring\") &&\n      isNumber(data[0].properties[column])) {\n      // we dont need to use generateDomain(data, column)\n      // columnData already has this in its x'es\n      columnDomain = columnData.map(e => e.x);\n      // we will just sort it        \n      columnDomain = sortNumericArray(columnDomain);\n\n      this.props.showLegend(\n        generateLegend(\n          {\n            domain: columnDomain,\n            title: humanize(column)\n          }\n        )\n      );\n    }\n\n    const columnPlot = {\n      data: columnData,\n      opacity: 1,\n      stroke: 'rgb(72, 87, 104)',\n      fill: 'rgb(18, 147, 154)',\n    }\n\n    const resetState = (urlOrName, button) => {\n      this.setState({\n        reset: !button,\n        year: \"\",\n        multiVarSelect: {},\n        barChartVariable: \"road_type\",\n        datasetName: urlOrName || this.state.datasetName\n      })\n    }\n\n    return (\n      <>\n        <div\n          style={{\n            color: dark ? \"white\" : \"black\",\n            background: dark ? \"#242730\" : \"white\"\n          }}\n          className=\"side-panel\">\n          <RBAlert alert={alert} />\n          <div\n            style={{\n              background: dark ? '#29323C' : '#eee'\n            }}\n            className=\"side-pane-header\">\n            <h2>{data && data.length ?\n              data.length + \" row\" + (data.length > 1 ? \"s\" : \"\") + \".\"\n              : \"Nothing to show\"}\n            </h2>\n            {notEmpty &&\n              <h6 className=\"truncate\">\n                dataset: {this.state.datasetName}\n              </h6>}\n          </div>\n          <div>\n            <DataInput\n              toggleOpen={() => typeof toggleOpen === 'function' && toggleOpen()}\n              urlCallback={(url, geojson, name) => {\n                resetState(url || name);\n                typeof (urlCallback) === 'function'\n                  && urlCallback(url, geojson);\n                typeof (toggleOpen) === 'function' && toggleOpen()\n              }\n              } />\n            {notEmpty &&\n              <Modal\n                toggleOpen={() => typeof toggleOpen === 'function' && toggleOpen()}\n                component={<DataTable data={data} />} />}\n            {\n              this.state.reset &&\n              <Button\n                kind={KIND.secondary} size={SIZE.compact}\n                onClick={() => {\n                  resetState(undefined, true);\n                  typeof (urlCallback) === 'function'\n                    && urlCallback();\n                  typeof (this.props.showLegend) === 'function' &&\n                    this.props.showLegend(false);\n                }}>Reset</Button>\n            }\n          </div>\n          <div className=\"side-panel-body\">\n            <div className=\"side-panel-body-content\">\n              {/* range of two values slider is not native html */\n                yearSlider({\n                  data: unfilteredData, year, multiVarSelect,\n                  // for callback we get { year: \"\",multiVarSelect }\n                  onSelectCallback, callback: (changes) => this.setState(changes)\n                })\n              }\n              <br />\n              {/* TODO: generate this declaritively too */}\n              {\n                severity_data && severity_data.map(each =>\n                  percentDiv(each.x, 100 * each.y / data.length, () => {\n                    if (multiVarSelect && multiVarSelect['accident_severity'] &&\n                      multiVarSelect['accident_severity'].has(each.x)) {\n                      delete multiVarSelect['accident_severity'];\n                    } else {\n                      multiVarSelect['accident_severity'] = new Set([each.x]);\n                      this.setState({ multiVarSelect })\n                    }\n                    onSelectCallback &&\n                      onSelectCallback(Object.keys(multiVarSelect).length === 0 ?\n                        { what: '' } : { what: 'multi', selected: multiVarSelect })\n                  }, dark))\n              }\n              <hr style={{ clear: 'both' }} />\n              {columnDomain.length > 1 &&\n                <Boxplot data={columnDomain} />}\n\n              <Tabs defaultActiveKey={\"1\"} id=\"main-tabs\">\n                <Tab eventKey=\"1\" title={\n                  <i style={{ fontSize: '2rem' }}\n                    className=\"fa fa-info\" />\n                }>\n                  {/* pick a column and vis type */}\n                  <AddVIS data={data} dark={dark} plotStyle={{ width: 240, margin: 20 }} />\n                  {/* distribution example */}\n                  {plotByProperty(data, \"age_of_casualty\", dark)}\n                  {plotByPropertyByDate(data, \"sex_of_casualty\", dark)}\n                  {notEmpty &&\n                    Object.keys(data[0].properties)\n                      .filter(p => !isEmptyOrSpaces(p)).length > 0 &&\n                    this.props.layerStyle !== \"grid\" &&\n                    <>\n                      <h6>Column for layer:</h6>\n                      <MultiSelect\n                        title=\"Choose Column\"\n                        single={true}\n                        values={\n                          Object.keys(data[0].properties).map(e =>\n                            ({ id: humanize(e), value: e }))\n                        }\n                        onSelectCallback={(selected) => {\n                          // array of seingle {id: , value: } object\n                          const newBarChartVar = (selected && selected[0]) ?\n                            selected[0].value : barChartVariable;\n                          this.setState({\n                            barChartVariable: newBarChartVar\n                          });\n                          typeof onSelectCallback === 'function' &&\n                            onSelectCallback({\n                              what: 'column', selected: newBarChartVar\n                            });\n                        }}\n                      />\n                    </>\n                  }\n                  {/* TODO: example of generating vis based on column\n                  cloudl now be deleted. */}\n\n                  {/* { //wait until onDragSelected of Plotly is configured.\n                    columnData &&\n                    <GenericPlotly dark={dark}\n                      yaxis={{ showgrid: false }}\n                      xaxis={{ showgrid: false }}\n                      data={[{\n                        showlegend: false, type: 'bar',\n                        x: columnData.map(e => e.x),\n                        y: columnData.map(e => e.y),\n                        marker: { color: TURQUOISE_RANGE[0] }\n                      }]}\n                      title={humanize(column)} />\n                  } */}\n                  {<SeriesPlot\n                    dark={dark}\n                    data={columnPlot.data}\n                    type={VerticalBarSeries}\n                    onValueClick={(datapoint) => {\n                      // convert back to string\n                      multiVarSelect[column ||\n                        barChartVariable] = new Set([datapoint.x + \"\"]);\n                      this.setState({ multiVarSelect })\n                      onSelectCallback &&\n                        onSelectCallback({ what: 'multi', selected: multiVarSelect })\n                    }}\n                    onDragSelected={(datapoints) => {\n                      multiVarSelect[column ||\n                        barChartVariable] = new Set(datapoints.map(e => e + \"\"));\n                      this.setState({ multiVarSelect })\n                      onSelectCallback &&\n                        onSelectCallback({ what: 'multi', selected: multiVarSelect })\n                    }}\n                    plotStyle={{ marginBottom: 100 }} noYAxis={true}\n\n                  />}\n                  {popPyramidPlot({ data, dark: dark })}\n                </Tab>\n                <Tab eventKey=\"2\" title={\n                  <i style={{ fontSize: '2rem' }}\n                    className=\"fa fa-sliders\" />\n                }>\n                  {notEmpty &&\n                    <div>\n                      <ColorPicker colourCallback={(color) =>\n                        typeof colourCallback === 'function' &&\n                        colourCallback(color)} />\n                      <h5>Radius</h5>\n                      <Slider\n                        value={[radius]}\n                        min={50}\n                        max={1000}\n                        step={50}\n                        onChange={({ value }) => {\n                          this.setState({ radius: value[0] });\n                          typeof (onChangeRadius) === 'function' &&\n                            onChangeRadius(value[0])\n                        }}\n                      />\n                      <h5>Elevation</h5>\n                      <Slider\n                        value={[elevation]}\n                        min={2}\n                        max={8}\n                        step={2}\n                        onChange={({ value }) => {\n                          this.setState({ elevation: value[0] });\n                          typeof (onChangeElevation) === 'function' &&\n                            onChangeRadius(value[0])\n                        }}\n                      />\n                    </div>\n                  }\n                  {notEmpty &&\n                    <>\n                      <h6>Deck Layer:</h6>\n                      <MultiSelect\n                        title=\"Choose Layer\"\n                        single={true}\n                        values={\n                          LAYERSTYLES.map(e =>\n                            ({ id: humanize(e), value: e }))\n                        }\n                        onSelectCallback={(selected) => {\n                          // array of seingle {id: , value: } object\n                          const newBarChartVar = (selected && selected[0]) ?\n                            selected[0].value : barChartVariable;\n                          this.setState({\n                            barChartVariable: newBarChartVar\n                          });\n                          typeof onSelectCallback === 'function' &&\n                            onSelectCallback({\n                              what: 'layerStyle', selected: newBarChartVar\n                            });\n                        }}\n                      />\n                    </>\n                  }\n                  Map Styles\n                  <br />\n                  <MapboxBaseLayers\n                    onSelectCallback={(selected) =>\n                      onSelectCallback &&\n                      onSelectCallback({\n                        selected: selected,\n                        what: 'mapstyle'\n                      })\n                    }\n                  />\n                  {notEmpty &&\n                    <>\n                      <Checkbox\n                        onChange={() => toggleHexPlot && toggleHexPlot()}\n                      >Hex Plot</Checkbox>\n                      <Checkbox\n                        onChange={() => {\n                          this.setState({ subsetBoundsChange: !subsetBoundsChange })\n                          if (toggleSubsetBoundsChange && typeof (toggleSubsetBoundsChange) === 'function') {\n                            toggleSubsetBoundsChange(!subsetBoundsChange) //starts with false\n                          }\n                        }}\n                      >Subset by map boundary</Checkbox>\n                    </>}\n\n                </Tab>\n                <Tab eventKey=\"3\" title={\n                  <i style={{ fontSize: '2rem' }}\n                    className=\"fa fa-filter\" >{\n                      multiVarSelect && Object.keys(multiVarSelect).length ?\n                        Object.keys(multiVarSelect).length : \"\"\n                    }</i>\n                }>\n                  {\n                    unfilteredData && unfilteredData.length > 0 &&\n                    <Variables\n                      dark={dark}\n                      multiVarSelect={multiVarSelect}\n                      onSelectCallback={(mvs) => {\n                        typeof (onSelectCallback) === 'function' &&\n                          onSelectCallback(\n                            Object.keys(mvs).length === 0 ?\n                              { what: '' } : { what: 'multi', selected: mvs })\n                        this.setState({ multiVarSelect: mvs })\n                      }}\n                      unfilteredData={unfilteredData} />\n                  }\n                </Tab>\n              </Tabs>\n            </div>\n            <div className=\"space\"></div>\n            <form className=\"search-form\" onSubmit={(e) => {\n              e.preventDefault();\n              searchNominatom(this.state.search, (json) => {\n                let bbox = json && json.length > 0 && json[0].boundingbox;\n                bbox = bbox && bbox.map(num => +(num))\n                typeof onlocationChange === 'function' && bbox &&\n                  onlocationChange({\n                    bbox: bbox,\n                    lon: +(json[0].lon), lat: +(json[0].lat)\n                  })\n              })\n            }}>\n              <FormGroup>\n                <InputGroup>\n                  <FormControl\n                    style={{\n                      background: dark ? '#242730' : 'white',\n                      color: dark ? 'white' : 'black'\n                    }}\n                    onChange={(e) => this.setState({ search: e.target.value })}\n                    placeholder=\"fly to...\" type=\"text\" />\n                  <InputGroup.Addon\n                    style={{\n                      background: dark ? '#242730' : 'white',\n                      color: dark ? 'white' : 'black'\n                    }}>\n                    <Glyphicon glyph=\"search\" />\n                  </InputGroup.Addon>\n                </InputGroup>\n              </FormGroup>\n            </form>\n          </div>\n        </div>\n      </>\n    )\n  }\n}\n\n","import React, { useState } from 'react';\nimport { Slider } from 'baseui/slider';\n\nimport GenerateUI from '../UI';\nimport { DateTime } from \"luxon\";\nimport { getPropertyValues } from '../../geojsonutils';\n\nconst DateSlider = (props) => {\n  const {data, multiVarSelect, onSelectCallback,\n    callback} = props;\n  const [value, setValue] = useState()\n\n  if(!data || data.length === 0) return null;\n  const s = Array.from(Array(data.length).keys()).slice(1,data.length-1)\n\n  return (\n    <>\n    <Slider\n      value={value || [s[0]]}\n      min={parseInt(s[0])}\n      max={parseInt(s[s.length - 1])}\n      step={1}\n      onChange={({ value }) => {\n        setValue(value);\n        // keep it the same in delete\n        multiVarSelect['date'] = new Set([data[value-1] + \"\"]);\n        typeof (callback) === 'function' &&\n        callback({\n          date: data[value-1] + \"\",\n          multiVarSelect\n        });\n        typeof (onSelectCallback) === 'function' &&\n          onSelectCallback({ selected: multiVarSelect, what: 'multi' });\n      }}\n    />\n    {<h5>Dates(s): {value ? data[value-1] : data[0] + \"-\" + data[data.length - 1]}.\n        {value &&\n            <i style={{ fontSize: '2rem' }} className=\"fa fa-trash\"\n              onClick={() => {\n                // remove\n                setValue(null);\n                delete multiVarSelect.date\n                typeof (onSelectCallback) === 'function' &&\n                  onSelectCallback(Object.keys(multiVarSelect).length === 0 ?\n                    { what: '' } : { what: 'multi', selected: multiVarSelect });\n                typeof (callback) === 'function' &&\n                  callback({\n                  date: \"\",\n                  multiVarSelect\n                });\n              }} />}\n        </h5>}\n  </>)\n}\n\n/**\n * Currently this function works with one/two format three-piece-date\n * like yyyy-mm-dd to generate a slider returing the year as the value.\n * \n * TODO: needs better (can be strict) form of \n * handling date. Explicitly state year/number (could be months)\n * \n * @param {*} options \n */\nconst yearSlider = (options) => {\n  const { data, year, multiVarSelect, onSelectCallback,\n    callback } = options;\n\n  if (!(data && data.length > 1 &&\n    (data[0].properties.date || data[0].properties['YEAR']) &&\n    (DateTime.fromFormat(data[0].properties.date + '', 'yyyy-mm-dd').isValid ||\n      DateTime.fromFormat(data[0].properties['YEAR'] + '', 'yyyy').isValid))) {\n    return null\n  }\n  const years = getPropertyValues({ features: data }, \"date\")\n    // returned 2009-01-02, convert to 2009\n    .map(e => +(e.split(\"-\")[0])).sort()\n  return <GenerateUI\n    title={\n      <h5>Year(s): {year ? year :\n        (years[0] + \" - \" + years[years.length - 1])}\n        {year &&\n          <i style={{ fontSize: '2rem' }} className=\"fa fa-trash\"\n            onClick={() => {\n              multiVarSelect.date ?\n                delete multiVarSelect.date : delete multiVarSelect.YEAR;\n              typeof (onSelectCallback) === 'function' &&\n                onSelectCallback(Object.keys(multiVarSelect).length === 0 ?\n                  { what: '' } : { what: 'multi', selected: multiVarSelect });\n              callback({\n                year: \"\",\n                multiVarSelect\n              });\n            }} />}\n      </h5>}\n    sublist={[...new Set(years)]}\n    suggested=\"slider\"\n    onChange={(value) => {\n      // the kye is one of `date` or `YEAR`\n      // keep it the same in delete\n      multiVarSelect[data[0].properties.date ?\n        'date' : 'YEAR'] = new Set([value + \"\"]);\n      callback({\n        year: value + \"\",\n        multiVarSelect\n      });\n      typeof (onSelectCallback) === 'function' &&\n        onSelectCallback({ selected: multiVarSelect, what: 'multi' });\n    }} />;\n}\n\nexport {\n  yearSlider,\n  DateSlider,\n}","import React, { Component } from 'react';\nimport { Slider } from 'baseui/slider';\nimport { XYPlot, XAxis, YAxis, HexbinSeries, Hint } from 'react-vis';\n\nexport default class HexHeatmap extends Component {\n  state = {\n    hoveredNode: null,\n    radius: 10,\n    offset: 0,\n  };\n  render() {\n    const { data, options } = this.props;\n    const { radius, hoveredNode } = this.state;\n    if(!data || !data.length) return null\n    return (\n      <div className=\"centered-and-flexed\" style={{color:'#fff'}}>\n        <Slider\n            value={[this.state.radius]}\n            min={5}\n            max={50}\n            step={5}\n            onChange={({ value }) => {\n              this.setState({ radius: value[0] });\n              // typeof (onChange) === 'function' && onChange(value[0])\n            }}\n          />\n          {\"Radius (pixels)\"}\n        <XYPlot\n          margin={{ left: 10, bottom: 10 }}\n          height={options &&\n            options.plotStyle && options.plotStyle.height || 350}\n          width={options &&\n            options.plotStyle && options.plotStyle.width || 350}\n          onMouseLeave={() => this.setState({ hoveredNode: null })}\n        >\n          <HexbinSeries\n            animation\n            className=\"hexbin-example\"\n            style={{\n              stroke: '#125C77',\n              strokeLinejoin: 'round'\n            }}\n            // onValueMouseOver={d => this.setState({ hoveredNode: d })}\n            colorRange={['orange', 'cyan']}\n            radius={radius}\n            data={data}\n          />\n          {options && !options.noXAxis && \n          <XAxis tickLabelAngle={-45} style={{\n            text: { fill: '#fff', fontWeight: 400 }\n          }} />}\n          {options && !options.noYAxis && \n          <YAxis tickLabelAngle={-45} style={{\n            text: { fill: '#fff', fontWeight: 400 }\n          }} />}\n          {/* {hoveredNode && (\n            <Hint\n              style={{ background: '#fff', position: 'relative' }}\n              xType=\"literal\"\n              yType=\"literal\"\n              getX={d => 50}\n              getY={d => 50}\n              value={{\n                x: hoveredNode.x,\n                y: hoveredNode.y,\n                value: hoveredNode.length\n              }}\n            />\n          )} */}\n        </XYPlot>\n      </div>\n    );\n  }\n}\n","import React, { useState, useEffect } from 'react';\nimport HexbinSeries from '../showcases/HexbinSeries';\n\nimport { coordsAsXY } from '../../geojsonutils';\n\nexport default (props) => {\n  // const [value, setValue] = useState([]);\n  const [open, setOpen] = useState(props.isMobile === false);\n  useEffect(() => {\n    // if props.open change to false is\n    // the only time it should react to it\n    if (props.open === true) return;\n    setOpen(props.open);\n  }, [props.open])\n\n  const { data } = props;\n  const notEmpty = data && data.length > 1;\n\n  if (notEmpty && data[0].geometry.type.toUpperCase() === 'POINT') {\n    return (\n      <div\n        style={{\n          marginRight: !open ? -350 : 0\n        }}\n        className=\"right-panel-container\">\n        <div\n          className=\"close-button\"\n          onClick={() => setOpen(!open)}\n          style={{ color: 'white' }}>\n          <i\n            style={{\n              //bottom and just outside the div\n              marginLeft: -16,\n              bottom: 0,\n              position: 'absolute',\n              backgroundColor: '#242730',\n              fontSize: '2rem', color: 'white !important'\n            }}\n            className={open ? \"fa fa-arrow-circle-right\" :\n              \"fa fa-arrow-circle-left\"} />\n        </div>\n        <div className=\"right-side-panel\">\n          {notEmpty &&\n            <HexbinSeries\n              data={coordsAsXY({ features: data })}\n              options={{ noXAxis: true, noYAxis: true }} />}\n        </div>\n      </div>\n    );\n  } else {\n    return null\n  }\n\n};","import React, { useState } from \"react\";\n\nimport DeckSidebar from \"./DeckSidebar\";\nimport HexPlot from './HexPlot';\n\n/**\n * The idea of this component is to avoid \n * rerender in the main component, everytime\n * open/close is executed. \n * \n * It could add further states to save main component rerendering \n * if need be.\n * \n */\nexport default (props) => {\n  const [open, setOpen] = useState(!props.isMobile);\n  const [hex, setHex] = useState(false);\n\n  // console.log(hex);\n\n  return (\n    <div className=\"side-panel-container\"\n      style={{ marginLeft: open ? 0 : '-320px' }}>\n      <DeckSidebar {...props}\n        // Note: \n        // *****************************\n        // Hooks is strange see this\n        // https://stackoverflow.com/a/54069332/2332101\n        // *****************************\n        toggleOpen={() => setOpen(o => !o)}   // o is current open\n        toggleHexPlot={() => setHex(h => !h)} // h is current hex\n      />\n      {hex &&\n        <HexPlot open={open} isMobile={props.isMobile}\n          data={props.data} />}\n      <div\n        className=\"close-button\"\n        onClick={() => setOpen(!open)}\n        style={{ color: 'white' }}>\n        <div style={{ backgroundColor: '#242730' }}>\n          <i\n            style={{ fontSize: '2rem', color: 'white !important' }}\n            className={open ? \"fa fa-arrow-circle-left\" :\n              \"fa fa-arrow-circle-right\"} />\n        </div>\n      </div>\n    </div>\n  );\n}","// https://github.com/ReactTraining/react-router/blob/master/FAQ.md#how-do-i-access-the-history-object-outside-of-components\n// history.js\nimport { createBrowserHistory } from 'history'\nexport default createBrowserHistory()","import React from 'react';\nimport { Table } from 'baseui/table';\nimport { humanize } from '../utils';\nimport { getPropertyValues, propertyCountByProperty } from '../geojsonutils';\nimport Plot from './showcases/GenericPlotly';\nimport { scaleSequential } from 'd3-scale';\nimport { TURQUOISE_RANGE } from '../Constants';\n\nconst WIDTH = 220;\nconst BAR_HEIGHT = 80;\n\nexport default class Tooltip extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      isMobile: props.isMobile,\n    };\n    this._listPropsAndValues = this._listPropsAndValues.bind(this);\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this._handleWindowSizeChange.bind(this));\n  }\n\n  // make sure to remove the listener\n  // when the component is not mounted anymore\n  componentWillUnmount() {\n    window.removeEventListener('resize', this._handleWindowSizeChange.bind(this));\n  }\n\n  _handleWindowSizeChange () {\n    this.forceUpdate()\n  };\n\n  /**\n   * hoverdObject can be of two types so far:\n   * 1. collections of points with `.points` property\n   * 2. properties of `.type === 'Feature'`.\n   */\n  render() {\n    const { topx, topy, hoveredObject,\n      column1 = \"accident_severity\", column2 = \"date\" } = this.props;\n    const { isMobile } = this.state;\n    // console.log(topx, topy);\n    // console.log(hoveredObject)\n\n    if (!hoveredObject) return null;\n\n    const type_feature = hoveredObject.type &&\n      hoveredObject.type === 'Feature';\n    const cluster = hoveredObject && hoveredObject.cluster\n    // {cluster: true, cluster_id: 8, point_count: 54, \n    // point_count_abbreviated: 54}\n\n    let severity_data_separate = [];\n    if (!type_feature && !cluster) {\n      // separate the severity into [[],[]] arrays\n      const severity_keys = column1 && getPropertyValues(\n        { features: hoveredObject.points.map(e => e.source) }, \n        column1);\n      const severity_by_year = column1 && column2 &&\n        propertyCountByProperty(\n          hoveredObject.points.map(e => e.source), \n          column1, column2);\n      //{2009: {Slight: 1}, 2010: {Slight: 3}, 2012: {Slight: 4}, \n      // 2013: {Slight: 3}, 2014: {Serious: 1}, 2015: {Slight: 6}, \n      // 2016: {Serious: 1, Slight: 2}, 2017: {Slight: 1}}\n      // now turn it into [{},{}]\n\n      severity_keys && severity_keys.forEach((name, i) => {\n        Object.keys(severity_by_year).forEach(y => {\n          if (y && severity_by_year[y][name]) {\n            if (!severity_data_separate[i]) {\n              severity_data_separate[i] = {\n                x: [], y: [], name: name,\n                marker: { color: scaleSequential(TURQUOISE_RANGE)(i / severity_keys.length) }\n              };\n            }\n            // 2016: {Serious: 1, Slight: 2}\n            severity_data_separate[i].x.push(y);\n            severity_data_separate[i].y.push(severity_by_year[y][name]);\n          }\n        })\n      })\n      severity_data_separate.map(e => {\n        if (e.x.length > 1) {\n          e.mode = 'lines'\n        }\n      })\n    }\n\n    const w = window.innerWidth;\n    const y = window.innerHeight;\n    const n_topy = isMobile ? 10 :\n      topy + (WIDTH + BAR_HEIGHT) > y ? topy - WIDTH : topy;\n    const n_left = isMobile ? 10 :\n      topx + WIDTH > w ? topx - WIDTH : topx;\n    const tooltip =\n      <div\n        className=\"xyz\" style={{\n          top: topy + (WIDTH + BAR_HEIGHT) > y ? n_topy : topy,\n          left: topx + WIDTH > w ? n_left : topx\n        }}>\n        <div>\n          <b>Total: {cluster ? hoveredObject.point_count :\n            type_feature ? 1 : hoveredObject.points.length}</b>\n        </div>\n        <div>\n          {\n            // Simple logic, if points and less two points or less,\n            // or not poingts, hard to expect React-vis generating plot.\n            // so list the values of the non-point or list both points.\n            !cluster && (type_feature || hoveredObject.points.length <= 2) ?\n            this._listPropsAndValues(hoveredObject) :\n            <Plot\n              title={`${humanize(column1)} by ${humanize(column2)}`}\n              width={WIDTH}\n              data={severity_data_separate}\n              dark={true}\n              xaxis={{ tickformat: 'd', showgrid: false }}\n              yaxis={{ showgrid: false }} />\n          }\n        </div>\n      </div >\n    return (tooltip)\n  }\n\n  _listPropsAndValues(hoveredObject, all = false, n = 6) {\n    if(!hoveredObject.properties || \n      !hoveredObject.points[0].properties) return null\n    let DATA = []\n    const props = hoveredObject.properties;\n    if (props) {\n      const keys = Object.keys(props)\n      DATA = keys\n        .slice(1, all ? keys.length : n)\n        .map(p => {\n          return ([humanize(p), props[p]])\n        })\n    } else { // two points passed go through first one\n      const keys = Object.keys(hoveredObject.points[0].properties);\n      DATA = keys\n        .slice(1, all ? keys.length : n) // miss accident_index\n        .map(p => {\n          let points = [\n            humanize(p),\n            hoveredObject.points[0].properties[p],\n          ]\n          if (hoveredObject.points[1]) {\n            points.push(hoveredObject.points[1].properties[p])\n          }\n          return (points)\n        })\n    }\n    return <Table style={{ maxWidth: '320px' }}\n      columns={\n        hoveredObject.points &&\n          hoveredObject.points.length === 2 ?\n          ['Property', 'Value p1', 'Value p2'] : ['Property', 'Value']\n      } data={DATA} />\n\n  }\n}","/**\n * Main entry to the application.\n * \n * The crucial bits are:\n * \n     this.state = {\n      data,            <= main data holding param   \n      layers: [],      <= mapgl layers object\n      initialViewState:<= deckgl/mapgl initial state object\n      legend: false    <= map legend to avoid rerender.\n    }\n * and\n * DeckSidebarContainer which holds DeckSidebar object itself.\n * \n * Main funcitons:\n * _generateLayer which is the main/factory of filtering state\n * of the map area of the application.\n * \n */\nimport React from 'react';\nimport DeckGL from 'deck.gl';\nimport MapGL, { NavigationControl, FlyToInterpolator } from 'react-map-gl';\nimport centroid from '@turf/centroid';\nimport bbox from '@turf/bbox';\nimport _ from 'underscore';\n\nimport {\n  fetchData, generateDeckLayer,\n  getParamsFromSearch, getBbx,\n  isMobile, colorScale, OSMTILES,\n  colorRanges, generateDomain,\n  convertRange, getMin, getMax, isURL, COLOR_RANGE\n} from './utils';\nimport Constants, { LIGHT_SETTINGS } from './Constants';\nimport DeckSidebarContainer from\n  './components/decksidebar/DeckSidebarContainer';\nimport history from './history';\n\nimport './App.css';\nimport Tooltip from './components/Tooltip';\nimport { sfType } from './geojsonutils';\nimport { isNumber } from './JSUtils';\n\nconst URL = (process.env.NODE_ENV === 'development' ? Constants.DEV_URL : Constants.PRD_URL);\nconst defualtURL = process.env.REACT_APP_DEFAULT_URL || (URL + \"/api/stats19\");\n\n// Set your mapbox access token here\nconst MAPBOX_ACCESS_TOKEN = process.env.REACT_APP_MAPBOX_ACCESS_TOKEN;\n\nconst gradient = {\n  height: '200px',\n  // TODO: which browsers?\n  backgroundColor: 'red', /* For browsers that do not support gradients */\n  backgroundImage: 'linear-gradient(to top, red , yellow)' /* Standard syntax (must be last) */\n}\n\nexport default class Welcome extends React.Component {\n  constructor(props) {\n    super(props)\n    const init = Constants.DECKGL_INIT\n    const param = getParamsFromSearch(props.location.search);\n    if (param) {\n      //lat=53.814&lng=-1.534&zoom=11.05&bea=0&pit=55&alt=1.5\n      Object.keys(param).forEach(key => {\n        Object.keys(init).forEach(iKey => {\n          if (iKey.startsWith(key)) {\n            init[key] = param[key]\n          }\n        })\n      })\n    }\n\n    this.state = {\n      loading: true,\n      layers: [],\n      backgroundImage: gradient.backgroundImage,\n      radius: 100,\n      elevation: 4,\n      mapStyle: MAPBOX_ACCESS_TOKEN ? (\"mapbox://styles/mapbox/\" +\n        (props.dark ? \"dark\" : \"streets\") + \"-v9\") : OSMTILES,\n      initialViewState: init,\n      subsetBoundsChange: false,\n      lastViewPortChange: new Date(),\n      colourName: 'default',\n      iconLimit: 500,\n      legend: false,\n      width: window.innerWidth, height: window.innerHeight,\n      tooltipColumns: {column1: \"accident_severity\" , column2: \"date\"}\n    }\n    this._generateLayer = this._generateLayer.bind(this)\n    this._renderTooltip = this._renderTooltip.bind(this);\n    this._fetchAndUpdateState = this._fetchAndUpdateState.bind(this);\n    this._fitViewport = this._fitViewport.bind(this);\n  }\n\n  componentDidMount() {\n    this._fetchAndUpdateState()\n    window.addEventListener('resize', this._resize);\n  }\n  componentWillUnmount() {\n    window.removeEventListener('resize', this._resize);\n  }\n\n  /**\n   * Main function to fetch data and update state.\n   * \n   * @param {String} aURL to use if not default `/api/stats19` is used.\n   * @param {Object} customError to use in case of urlCallback object/urls.\n   */\n  _fetchAndUpdateState(aURL, customError) {\n    if (aURL && !isURL(aURL)) return;\n    if (customError && typeof (customError) !== 'object') return;\n    // TODO: more sanity checks?\n    const fullURL = aURL ?\n      // TODO: decide which is better.\n      // URL + \"/api/url?q=\" + aURL : // get the server to parse it \n      aURL : // do not get the server to parse it \n      defualtURL;\n\n    fetchData(fullURL, (data, error) => {\n      if (!error) {\n        // this._updateURL(viewport)\n        this.setState({\n          loading: false,\n          data: data,\n          alert: customError || null\n        })\n        this._fitViewport(data)\n        this._generateLayer()\n      } else {\n        this.setState({\n          loading: false,\n          alert: { content: 'Could not reach: ' + fullURL }\n        })\n        //network error?\n      }\n    })\n  }\n\n  /**\n   * Welcome should hold own state in selected as:\n   * {property: Set(val1, val2), ...}.\n   * \n   * @param {*} values includes\n   * radius: specific to changing geoms\n   * elevation: specific to changing geoms\n   * filter: multivariate filter of properties\n   * cn: short for colorName passed from callback\n   * TODO: other\n   */\n  _generateLayer(values = {}) {\n    const { radius, elevation, filter, cn } = values;\n\n    if (filter && filter.what === 'mapstyle') {\n      this.setState({\n        mapStyle: !MAPBOX_ACCESS_TOKEN ? OSMTILES :\n          filter && filter.what === 'mapstyle' ? \"mapbox://styles/mapbox/\" + filter.selected + \"-v9\" : this.state.mapStyle,\n      })\n      return;\n    }\n    let data = this.state.data && this.state.data.features\n    const { colourName, iconLimit } = this.state;\n    let column = (filter && filter.what === 'column' && filter.selected) ||\n      this.state.column;\n\n    if (!data) return;\n    if (filter && filter.what === \"%\") {\n      data = data.slice(0, filter.selected / 100 * data.length)\n    }\n    // to optimize the search keep state as the source of truth\n    if (this.state.coords) {\n      data = this.state.filtered;\n    }\n    const geomType = sfType(data[0]).toLowerCase();\n    //if resetting a value\n    if (filter && filter.selected !== \"\") {\n      data = data.filter(\n        d => {\n          if (filter.what === 'multi') {\n            // go through each selection\n            const selected = filter.selected;\n            // selected.var > Set()\n            for (let each of Object.keys(selected)) {\n              const nextValue = each === \"date\" ?\n                d.properties[each].split(\"-\")[0] : d.properties[each] + \"\"\n              // each from selected must be in d.properties\n              // *****************************\n              // compare string to string\n              // *****************************\n              if (!selected[each].has(nextValue)) {\n                return false\n              }\n            }\n          }\n          if (filter.what === 'coords') {\n            // coords in \n            if (_.difference(filter.selected || this.state.coords,\n              d.geometry.coordinates.flat()).length !== 0) {\n              return false;\n            }\n          }\n          return (true)\n        }\n      )\n    }\n    let layerStyle = (filter && filter.what ===\n      'layerStyle' && filter.selected) || this.state.layerStyle || 'grid';\n    if (geomType !== \"point\") layerStyle = \"geojson\"\n    const switchToIcon = data.length < iconLimit && !column && \n    (!filter || filter.what !== 'layerStyle') && geomType === \"point\";\n    if (switchToIcon) layerStyle = 'icon';\n    const options = {\n      radius: radius ? radius : this.state.radius,\n      cellSize: radius ? radius : this.state.radius,\n      elevationScale: elevation ? elevation : this.state.elevation,\n      lightSettings: LIGHT_SETTINGS,\n      colorRange: colorRanges(cn || colourName)\n    };\n    // generate a domain\n    const columnNameOrIndex =\n      (filter && filter.what === 'column' && filter.selected) || column || 1;\n    if (layerStyle === 'heatmap') {\n      options.getPosition = d => d.geometry.coordinates\n      // options.getWeight = d => d.properties[columnNameOrIndex]\n    }\n    if (geomType === 'linestring') {\n      layerStyle = \"line\"\n      // https://github.com/uber/deck.gl/blob/master/docs/layers/line-layer.md\n      options.getColor = d => [235, 170, 20]\n      options.getPath = d => d.geometry.coordinates\n      options.onClick = (info) => {\n        if (info && info.hasOwnProperty('coordinate')) {\n          if (['path', 'arc', 'line'].includes(this.state.layerStyle) &&\n            info.object.geometry.coordinates) {\n            this._generateLayer({\n              filter: {\n                what: 'coords',\n                selected: info.object.geometry.coordinates[0]\n              }\n            })\n          }\n        }\n      }\n      if (layerStyle === 'line') {\n        // options.getSourceColor = d => [Math.sqrt(+(d.properties.base)) * 1000, 140, 0]\n        // options.getTargetColor = d => [Math.sqrt(+(d.properties.hs2)) * 1e13, 140, 0]\n        options.getSourcePosition = d => d.geometry.coordinates[0] // geojson\n        options.getTargetPosition = d => d.geometry.coordinates[1] // geojson\n      }\n      if (isNumber(data[0] && data[0].properties &&\n        data[0].properties[columnNameOrIndex])) {\n        const colArray = data.map(f => f.properties[columnNameOrIndex])\n        const max = getMax(colArray);\n        const min = getMin(colArray)\n        options.getWidth = d => {\n          let newMax = 10, newMin = 0.1;\n          if (data.length > 100000) {\n            newMax = 0.5; newMin = 0.005\n          }\n          const r = convertRange(\n            d.properties[columnNameOrIndex], {\n            oldMin: min, oldMax: max, newMax: newMax, newMin: newMin\n          })\n          return r\n        }; // avoid id\n      }\n    }\n    const domain = generateDomain(data, columnNameOrIndex);\n    if (geomType === \"polygon\" || geomType === \"multipolygon\" || layerStyle === 'geojson') {\n      if(domain && domain.length > 50) {\n        options.getFillColor = d => COLOR_RANGE(d.properties[\n          isNumber(columnNameOrIndex) ? \n          Object.keys(d.properties)[columnNameOrIndex] : columnNameOrIndex\n        ])\n      } else{\n        options.getFillColor = (d) => colorScale(d, columnNameOrIndex, domain)\n      }\n    }\n    if (layerStyle === 'barvis') {\n      options.getPosition = d => [d.geometry.coordinates[0],\n      d.geometry.coordinates[1], 0]\n      if (data[0].properties.result) options.getRotationAngle = d =>\n        d.properties.result.includes(\"gain from\") ? 45 : 1\n      options.getScale = d => 200\n    }\n    const alayer = generateDeckLayer(\n      layerStyle, data, this._renderTooltip, options\n    )\n\n    this.setState({\n      alert: switchToIcon ? { content: 'Switched to icon mode. ' } : null,\n      loading: false,\n      // do not save if not given else leave it as it is\n      layerStyle: filter && filter.what ===\n        'layerStyle' ? filter.selected : this.state.layerStyle,  \n      geomType,\n      tooltip: \"\",\n      filtered: data,\n      layers: [alayer],\n      radius: radius ? radius : this.state.radius,\n      elevation: elevation ? elevation : this.state.elevation,\n      road_type: filter && filter.what === 'road_type' ? filter.selected :\n        this.state.road_type,\n      colourName: cn || colourName,\n      column, // all checked\n      coords: filter && filter.what === 'coords' ? filter.selected :\n        this.state.coords\n    })\n  }\n\n  _fitViewport(newData, bboxLonLat) {\n    const data = newData || this.state.data;\n    if ((!data || data.length === 0) && !bboxLonLat) return;\n    const bounds = bboxLonLat ?\n      bboxLonLat.bbox : bbox(data)\n    const center = bboxLonLat ? \n    [bboxLonLat.lon, bboxLonLat.lat] : centroid(data).geometry.coordinates;\n\n    this.map.fitBounds(bounds, {padding:'100px'})\n\n    const viewport = {\n      ...this.state.viewport,\n      longitude: center[0],\n      latitude: center[1],\n      transitionDuration: 500,\n      transitionInterpolator: new FlyToInterpolator(),\n      // transitionEasing: d3.easeCubic\n    };\n    this.setState({ viewport })\n  }\n\n  /**\n   * Currently the tooltip focuses on aggregated layer (grid).\n   * \n   * @param {Object} params passed from DeckGL layer. \n   */\n  _renderTooltip(params) {\n    const { x, y, object } = params;\n    const hoveredObject = object;\n    // return\n    if (!hoveredObject) {\n      this.setState({ tooltip: \"\" })\n      return;\n    }\n    this.setState({\n      tooltip:\n        // react did not like x and y props.\n        <Tooltip\n          {...this.state.tooltipColumns}\n          isMobile={isMobile()}\n          topx={x} topy={y} hoveredObject={hoveredObject} />\n    })\n  }\n\n  _updateURL(viewport) {\n    const { latitude, longitude, zoom, bearing, pitch, altitude } = viewport;\n    const { subsetBoundsChange, lastViewPortChange } = this.state;\n\n    //if we do history.replace/push 100 times in less than 30 secs \n    // browser will crash\n    if (new Date() - lastViewPortChange > 1000) {\n      history.push(\n        `/?lat=${latitude.toFixed(3)}` +\n        `&lng=${longitude.toFixed(3)}` +\n        `&zoom=${zoom.toFixed(2)}` +\n        `&bea=${bearing}` +\n        `&pit=${pitch}` +\n        `&alt=${altitude}`\n      )\n      this.setState({ lastViewPortChange: new Date() })\n    }\n    const bounds = this.map && this.map.getBounds()\n    if (bounds && subsetBoundsChange) {\n      const box = getBbx(bounds)\n      const { xmin, ymin, xmax, ymax } = box;\n      fetchData(defualtURL + xmin + \"/\" +\n        ymin + \"/\" + xmax + \"/\" + ymax,\n        (data, error) => {\n          if (!error) {\n            this.setState({\n              data: data.features,\n            })\n            this._generateLayer()\n          } else {\n            //network error?\n          }\n        })\n    }\n\n  }\n\n  render() {\n    const { tooltip, viewport, initialViewState,\n      loading, mapStyle, alert, data, filtered,\n      layerStyle, geomType, legend, coords } = this.state;\n\n    return (\n      <div id=\"html2pdf\">\n        {/* just a little catch to hide the loader \n        when no basemap is presetn */}\n        <div className=\"loader\" style={{\n          zIndex: loading ? 999 : -1,\n          visibility: typeof mapStyle === 'string' &&\n            mapStyle.endsWith(\"No map-v9\") ? 'hidden' : 'visible'\n        }} />\n        <MapGL\n          ref={ref => {\n            // save a reference to the mapboxgl.Map instance\n            this.map = ref && ref.getMap();\n          }}\n          mapStyle={mapStyle}\n          onViewportChange={(viewport) => {\n            this._updateURL(viewport)\n            this.setState({ viewport })\n          }}\n          height={this.state.height - 54 + 'px'}\n          width={this.state.width + 'px'}\n          //crucial bit below\n          viewState={viewport ? viewport : initialViewState}\n        // mapboxApiAccessToken={MAPBOX_ACCESS_TOKEN}\n        >\n          <div className='mapboxgl-ctrl-top-right' style={{\n            zIndex: 9\n          }}>\n            <NavigationControl\n              {...viewport}\n              onViewportChange={viewport => this.setState({ viewport })}\n            />\n          </div>\n          <DeckGL\n            viewState={viewport ? viewport : initialViewState}\n            initialViewState={initialViewState}\n            layers={this.state.layers}\n            // see docs below, url split for readability\n            // https://deck.gl/#/documentation/developer-guide/\n            // adding-interactivity?\n            // section=using-the-built-in-event-handling\n            onClick={(e) => {\n              if (!e.layer && coords) {\n                this.setState({ coords: null })\n                this._generateLayer()\n              }\n            }}\n          >\n            {tooltip}\n          </DeckGL>\n        </MapGL>\n        <DeckSidebarContainer\n          dark={this.props.dark}\n          layerStyle={layerStyle}\n          isMobile={isMobile()}\n          key=\"decksidebar\"\n          alert={alert}\n          unfilteredData={data && data.features}\n          data={filtered}\n          colourCallback={(colourName) =>\n            this._generateLayer({ cn: colourName })\n          }\n          urlCallback={(url_returned, geojson_returned) => {\n            this.setState({\n              tooltip: \"\",\n              road_type: \"\",\n              radius: 100,\n              elevation: 4,\n              loading: true,\n              coords: null\n            })\n            if (geojson_returned) {\n              // confirm valid geojson\n              try {\n                this.setState({\n                  data: geojson_returned\n                })\n                this._fitViewport(geojson_returned)\n                this._generateLayer()\n              } catch (error) {\n                // load up default\n                this._fetchAndUpdateState(undefined, { content: error.message });\n              }\n            } else {\n              this._fetchAndUpdateState(url_returned);\n            }\n          }}\n          column={this.state.column}\n          onSelectCallback={(selected) => this._generateLayer({ filter: selected })}\n          onChangeRadius={(value) => this._generateLayer({ radius: value })}\n          onChangeElevation={(value) => this._generateLayer({ elevation: value })}\n          toggleSubsetBoundsChange={(value) => {\n            this.setState({\n              loading: true,\n              subsetBoundsChange: value\n            })\n            this._fetchAndUpdateState();\n          }}\n          onlocationChange={(bboxLonLat) => {\n            this._fitViewport(undefined, bboxLonLat)\n          }}\n          showLegend={(legend) => this.setState({ legend })}\n          datasetName={defualtURL}\n        />\n        {\n          legend && (geomType === 'polygon' ||\n            geomType === 'multipolygon') &&\n          <div className=\"right-side-panel mapbox-legend\">\n            {legend}\n          </div>\n        }\n      </div>\n    );\n  }\n  _resize = () => {\n    this.setState({ width: window.innerWidth, height: window.innerHeight });\n  };\n}","/**\n * geoplumber R package code.\n */\nimport React, { useState } from 'react';\nimport { Navbar, Nav, NavItem } from 'react-bootstrap';\nimport { Link, withRouter } from 'react-router-dom';\n\nimport { ATILOGO } from '../utils';\n\nconst navs = [\n  {\n    key: 1,\n    to: \"fui\",\n    title: \"DUI\"\n  },\n  {\n    key: 2,\n    to: \"about\",\n    title: \"About\"\n  },\n];\n\nfunction Header(props) {\n  const [dark, setDark] = useState(props.dark)\n  return (\n    <Navbar inverse={dark} collapseOnSelect>\n      <Navbar.Header>\n        <Navbar.Brand>\n          <Link to=\"/\">\n            <svg className=\"logo\" viewBox=\"0 0 1025 428\"\n              version=\"1.1\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              xlink=\"http://www.w3.org/1999/xlink\">\n              {ATILOGO(dark)}\n            </svg>\n          </Link>\n        </Navbar.Brand>\n        <Navbar.Toggle />\n      </Navbar.Header>\n      <Navbar.Collapse>\n        <Nav>\n          {\n            navs.map((item, i) => {\n              return (\n                <NavItem\n                  key={i}\n                  eventKey={item.key}\n                  onClick={() => props.history.push(item.to)}>\n                  {item.title}\n                </NavItem>\n              )\n            })\n          }\n        </Nav>\n        <Nav pullRight>\n          <NavItem href=\"https://github.com/layik/eAtlas\">\n            <i style={{ fontSize: '1.5em' }} className=\"fa fa-github\"></i>\n          </NavItem>\n        </Nav>\n        <Nav pullRight>\n          <NavItem onClick={() => {\n            typeof props.toggleTheme === 'function' && props.toggleTheme()\n            setDark(!dark)\n          }}>\n            <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\n              <g transform=\"matrix( 1 0 0 1 4 1 )\">\n                <path fill-rule=\"evenodd\" clip-rule=\"evenodd\"\n                  d=\"M15.3999 11C15.7999 10.1 16 9 16 8C16 3.6 12.4 0 8 0C3.6 0 0 3.6 0 8C0 9.1 0.200098 10.1 0.600098 11L2.19995 15L13.8 15L15.3999 11ZM11 22L12.6001 18L3.3999 18L5 22L11 22Z\" fill={\n                    dark ? '#fff' : '#000'\n                  } opacity=\"1\">\n                </path>\n              </g>\n            </svg>\n          </NavItem>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar >\n  )\n}\n\n// thanks to https://stackoverflow.com/a/42124328/2332101\nexport default withRouter(Header);\n","/**\n * L Hama\n */\nimport React, { Component } from 'react';\nimport marked from \"marked\";\n\n/**\n * Separate the Header and the main content.\n * Up to this point we are still not using SSR\n */\nclass About extends Component {\n  state = { markdown: null }\n  componentDidMount() {\n    const readmePath = require(\"./notes.md\");\n\n    fetch(readmePath)\n      .then(response => {\n        return response.text()\n      })\n      .then(text => {\n        this.setState({\n          markdown: marked(text)\n        })\n      })\n  }\n  render() {\n    const { markdown } = this.state;\n\n    return (\n      <section style={{ background: 'white', padding: '5%' }}>\n        <article dangerouslySetInnerHTML={{ __html: markdown }}></article>\n      </section>\n    )\n  }\n}\n\nexport default About;\n","import { Component } from 'react'\n//https://tylermcginnis.com/react-router-code-splitting/\n//we can further add our laoding spinner here.\nexport default class DynamicImport extends Component {\n  state = {\n    component: null\n  }\n  componentDidMount () {\n    this.props.load()\n      .then((component) => {\n        this.setState(() => ({\n          component: component.default ? component.default : component\n        }))\n      })\n  }\n  render() {\n    return this.props.children(this.state.component)\n  }\n}","/**\n * geoplumber R package code.\n */\nimport React, { useState } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider as StyletronProvider } from 'styletron-react';\nimport { BaseProvider, LightTheme, DarkTheme } from 'baseui';\nimport { Client as Styletron } from 'styletron-engine-atomic';\n\nimport Welcome from './Welcome';\nimport Header from './components/Header';\nimport About from './About';\nimport DynamicImport from './components/DynamicImport';\n\nimport './App.css';\n\nconst engine = new Styletron();\n\n/**\n * Code splitting.\n * @param {*} props \n */\nconst DUI = (props) => (\n  <DynamicImport load={() => import('./components/DUI')}>\n    {\n      (Component) => Component === null\n        ? <div className=\"loader\" style={{ zIndex: 999 }} />\n        : <Component {...props} />\n    }\n  </DynamicImport>\n)\n\n/**\n * Separate the Header and the main content.\n * Up to this point we are still not using SSR\n */\nfunction App() {\n    const [dark, setDark] = useState(true)\n    \n    return (\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <main style={{\n        background: dark ? '#242730' : 'white',\n        margin: 'auto', color: dark ? '#a3a5a8' : 'black'\n      }}>\n        <Header dark={dark}\n        toggleTheme={() => setDark(!dark)}/>\n        <StyletronProvider value={engine}>\n          <BaseProvider theme={dark ? DarkTheme : LightTheme}>\n            <Switch>\n              <Route exact path=\"/\" component={(props) => <Welcome \n              {...props}\n              dark={dark}\n              />} />\n              <Route exact path=\"/fui\" component={(props) => <DUI \n              {...props}\n              dark={dark}\n              />} />\n              <Route exact path=\"/about\" component={About} />\n            </Switch>\n          </BaseProvider>\n        </StyletronProvider>\n      </main>\n      </BrowserRouter>\n    )\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/**\n * geoplumber R package code.\n */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n// brief about serviceworkers from CRA\n// https://stackoverflow.com/a/49314454/11101153\nimport { unregister } from './registerServiceWorker';\n\n/**\n * Separating index.js and App.js:\n * 1. doing above like launch configs here\n * 2. keep App.js clear for React application.\n */\nReactDOM.render(<App />, document.getElementById('root'));\n\nunregister();\n","import {CompositeLayer} from '@deck.gl/core';\nimport {IconLayer} from '@deck.gl/layers';\nimport Supercluster from 'supercluster';\n\nfunction getIconName(size) {\n  if (size === 0) {\n    return '';\n  }\n  if (size < 10) {\n    return `marker-${size}`;\n  }\n  if (size < 100) {\n    return `marker-${Math.floor(size / 10)}0`;\n  }\n  return 'marker-100';\n}\n\nfunction getIconSize(size) {\n  return Math.min(100, size) / 100 + 1;\n}\n\nexport default class IconClusterLayer extends CompositeLayer {\n  shouldUpdateState({changeFlags}) {\n    return changeFlags.somethingChanged;\n  }\n\n  updateState({props, oldProps, changeFlags}) {\n    const rebuildIndex = changeFlags.dataChanged || props.sizeScale !== oldProps.sizeScale;\n\n    if (rebuildIndex) {\n      const index = new Supercluster({maxZoom: 16, radius: props.sizeScale});\n      index.load(\n        props.data.map(d => ({\n          geometry: {coordinates: props.getPosition(d)},\n          properties: d\n        }))\n      );\n      this.setState({index});\n    }\n\n    const z = Math.floor(this.context.viewport.zoom);\n    if (rebuildIndex || z !== this.state.z) {\n      this.setState({\n        data: this.state.index.getClusters([-180, -85, 180, 85], z),\n        z\n      });\n    }\n  }\n\n  getPickingInfo({info, mode}) {\n    const pickedObject = info.object && info.object.properties;\n    if (pickedObject) {\n      if (pickedObject.cluster && mode !== 'hover') {\n        info.objects = this.state.index\n          .getLeaves(pickedObject.cluster_id, 25)\n          .map(f => f.properties);\n      }\n      info.object = pickedObject;\n    }\n    return info;\n  }\n\n  renderLayers() {\n    const {data} = this.state;\n    const {iconAtlas, iconMapping, sizeScale} = this.props;\n\n    return new IconLayer(\n      this.getSubLayerProps({\n        id: 'icon',\n        data,\n        iconAtlas,\n        iconMapping,\n        sizeScale,\n        getPosition: d => d.geometry.coordinates,\n        getIcon: d => getIconName(d.properties.cluster ? d.properties.point_count : 1),\n        getSize: d => getIconSize(d.properties.cluster ? d.properties.point_count : 1)\n      })\n    );\n  }\n}\n","import {Layer, project32, picking} from '@deck.gl/core';\nimport GL from '@luma.gl/constants';\nimport {Model, Geometry} from '@luma.gl/core';\n\nconst vs = `\n  attribute vec3 positions;\n  attribute vec3 instancePositions;\n  attribute vec3 instancePositions64Low;\n  attribute float instanceRadius;\n  attribute vec4 instanceColors;\n  attribute float instanceScale;\n  attribute float instanceRotationAngle;\n  attribute float instanceWidth;\n  // for onHover to work must\n  // delcare instancePickingColors here and assign it to\n  // geometry.pickingColor\n  // and then register DECKGL_FILTER_COLOR hook in\n  // fragment shader\n  attribute vec3 instancePickingColors;\n\n  varying vec4 vColor;\n  varying vec2 vPosition;\n\n  vec2 rotate_by_angle(vec2 vertex, float angle) {\n    float angle_radian = angle * PI / 180.0;\n    float cos_angle = cos(angle_radian);\n    float sin_angle = sin(angle_radian);\n    mat2 rotationMatrix = mat2(cos_angle, -sin_angle, sin_angle, cos_angle);\n    return rotationMatrix * vertex;\n  }\n\n  void main(void) {\n    geometry.pickingColor = instancePickingColors;\n\n    vec3 offsetCommon = positions * project_size(instanceRadius);\n    offsetCommon = vec3(rotate_by_angle(offsetCommon.xy, instanceRotationAngle), 0);\n    offsetCommon.x = offsetCommon.x * instanceWidth;\n    // width first\n    offsetCommon = offsetCommon * instanceScale;\n    \n    vec3 positionCommon = project_position(instancePositions, instancePositions64Low);\n    // missx: So in your shader, positionCommon is the anchor position on the map. \n    // offsetCommon is the local coordinate relative to the anchor\n    // You want to leave the anchor alone and rotate the offset\n\n    gl_Position = project_common_position_to_clipspace(vec4(positionCommon + offsetCommon, 1.0));\n\n    vPosition = positions.xy;\n    vColor = instanceColors;\n    DECKGL_FILTER_COLOR(vColor, geometry);\n\n  }`;\n\nconst fs = `\n  precision highp float;\n\n  uniform float smoothRadius;\n\n  varying vec4 vColor;\n  varying vec2 vPosition;\n\n  void main(void) {    \n    float distToCenter = length(vPosition);\n\n    if (distToCenter > 1.0) {\n      discard;\n    }\n\n    float alpha = smoothstep(1.0, 1.0 - smoothRadius, distToCenter);\n    gl_FragColor = vec4(vColor.rgb, vColor.a * alpha);\n    DECKGL_FILTER_COLOR(gl_FragColor, geometry);\n  }`;\nconst defaultProps = {\n  // Center of each circle, in [longitude, latitude, (z)]\n  getPosition: {type: 'accessor', value: x => x.position},\n  // Radius of each circle, in meters\n  getRadius: {type: 'accessor', value: 30},\n  // Color of each circle, in [R, G, B, (A)]\n  getColor: {type: 'accessor', value: [0, 0, 0, 255]},\n  // Amount to soften the edges\n  smoothRadius: {type: 'number', min: 0, value: 0.5},\n  // Amount to scale bottom of arrow\n  getScale: {type: 'accessor', value: 1},\n  // Amount to rotate line with\n  getRotationAngle: {type: 'accessor', value: 1},\n  // Amount to thicken the line with\n  getWidth: {type: 'accessor', value: 1},\n};\n\nexport default class BarLayer extends Layer {\n  // getPickingInfo(params) {\n  //   const info = super.getPickingInfo(params);\n  //   const {index} = info;\n  //   const {data} = this.props;\n\n  //   if (data[0] && data[0].__source) {\n  //     // data is wrapped\n  //     info.object = data.find(d => d.__source.index === index);\n  //   }\n  //   // console.log(info);\n    \n  //   return info;\n  // }\n  \n  getShaders() {\n    return super.getShaders({vs, fs, modules: [project32, picking]});\n  }\n\n  initializeState() {\n    this.getAttributeManager().addInstanced({\n      instancePositions: {\n        size: 3,\n        type: GL.DOUBLE,\n        accessor: 'getPosition'\n      },\n      instanceRadius: {\n        size: 1,\n        accessor: 'getRadius',\n        defaultValue: 1\n      },\n      instanceColors: {\n        size: 4,\n        type: GL.UNSIGNED_BYTE,\n        accessor: 'getColor',\n        defaultValue: [1, 0, 0, 255]\n      },\n      smoothRadius: {\n        size: 1,\n        normalized: true,\n        type: GL.UNSIGNED_BYTE,\n        accessor: 'smoothRadius',\n        defaultValue: [1, 0, 0, 255]\n      },\n      instanceScale: {\n        size: 1,\n        accessor: 'getScale',\n        defaultValue: 1\n      },\n      instanceRotationAngle: {\n        size: 1,\n        accessor: 'getRotationAngle',\n        defaultValue: 1\n      },\n      instanceWidth: {\n        size: 1,\n        accessor: 'getWidth',\n        defaultValue: 1\n      }\n    })\n  }\n  updateState({props, oldProps, changeFlags}) {\n    super.updateState({props, oldProps, changeFlags});\n    \n    if (changeFlags.extensionsChanged) {\n      const {gl} = this.context;\n      if (this.state.model) {\n        this.state.model.delete();\n      }\n      this.setState({model: this._getModel(gl)});\n    }\n  }\n\n  draw({uniforms}) {\n    this.state.model\n      .setUniforms(uniforms)\n      .setUniforms({\n        smoothRadius: this.props.smoothRadius\n      })\n      .draw();    \n  }\n\n  _getModel(gl) {\n    const positions = [\n      -.1, -1, \n      0.1, -1,\n      -.1, 1,\n      -.1, 1,\n      0.1, 1,\n      0.1, -1,\n    ];\n    return new Model(\n      gl,\n      Object.assign(this.getShaders(), {\n        id: this.props.id,\n        geometry: new Geometry({\n          drawMode: GL.TRIANGLE_STRIP,\n          vertexCount: 6,\n          attributes: {\n            positions: {size: 2, value: new Float32Array(positions)}\n          }\n        }),\n        isInstanced: true\n      })\n    );\n  }\n}\n\nBarLayer.layerName = 'BarLayer';\nBarLayer.defaultProps = defaultProps;","import React from 'react';\nimport {\n  ScatterplotLayer, HexagonLayer, GeoJsonLayer,\n  ScreenGridLayer, GridLayer, LineLayer,\n  HeatmapLayer,\n  TextLayer\n} from 'deck.gl';\nimport {\n  interpolateOrRd, // schemeBlues\n} from 'd3-scale-chromatic';\nimport {scaleThreshold} from 'd3-scale';\n\nimport qs from 'qs'; // warning: importing it otherways would cause minificatino issue.\n\nimport mapping from './location-icon-mapping.json';\nimport Constants from './Constants';\nimport { isString, isNumber } from './JSUtils.js';\nimport IconClusterLayer from './icon-cluster-layer';\nimport { ArcLayer, PathLayer } from '@deck.gl/layers';\nimport BarLayer from './components/customlayers/BarLayer'\nimport { isArray } from 'underscore';\nimport csv2geojson from 'csv2geojson';\nimport { ascending } from 'd3-array';\nimport atlas from './img/location-icon-atlas.png';\n\nconst getResultsFromGoogleMaps = (string, callback) => {\n\n  if (typeof (string) === 'string' && typeof (callback) === 'function') {\n    let fullURL = \"https://maps.googleapis.com/maps/api/geocode/json?address=\" +\n      string\n      + \"&key=WRONG_KEY\";\n    fetch(fullURL)\n      .then((response) => {\n        if (response.status !== 200) {\n          console.log('Looks like there was a problem. Status Code: ' +\n            response.status);\n          return;\n        }\n        // Examine the text in the response\n        response.json()\n          .then((data) => {\n            //rouch search results will do.\n            if (data.results.length === 0 || response.status === 'ZERO_RESULTS') {\n              callback(response.status);\n            } else {\n              callback(data.results[0].geometry.location)\n            }\n          });\n      })\n      .catch((err) => {\n        console.log('Fetch Error :-S', err);\n      });\n\n  }\n  //ignore\n};\n\nconst fetchData = (url, callback) => {\n  fetch(url) // [0] => \"\", [1] => roads and [2] => qfactor\n    .then((response) => response.text())\n    .then((response) => {\n      if(url.endsWith(\"csv\")) {\n        csv2geojson.csv2geojson(response, (err, data) => {\n          if (!err) {\n            typeof (callback) === 'function'\n              && callback(data)\n          }\n        })\n      } else {\n        //assume json\n        try {\n          const json = JSON.parse(response);\n          callback(json)\n        } catch (error) {\n          callback(undefined, error)\n        }\n      }\n    })\n    .catch((error) => {\n      console.error(error);\n      callback(null, error)\n    });\n\n}\n\n/**\n * \n * Simple fetch check of URL\n * \n * @param {*} URL \n * @param {*} callback \n */\nconst checkURLReachable = (URL, callback) => {\n  fetch(URL)\n  .then((response) => {\n    if(response.ok) {\n      callback(true)\n    } else {\n      callback(false)\n    }\n  })\n  .catch((error) => {\n    console.log('There has been a problem with your fetch operation: ' + error.message);\n  });\n}\n\n/**\n * Function to count frequency of values of `property` given.\n * \n * TODO: Double check to see if it is slightly different\n * version of propertyCount\n * \n * \n * @param {Object} data \n * @param {String} property \n * @param {Boolean} noNulls \n */\nconst xyObjectByProperty = (data, property, noNulls = true) => {\n  if (!data || !property) return;\n  //data = [{...data = 12/12/12}]       \n  const map = new Map()\n  data.forEach(feature => {\n    let value = feature.properties[property];\n    if (noNulls && value) { // remove nulls here\n      const isNumValue = +(value) ? +(value) : value\n      if (map.get(isNumValue)) {\n        map.set(isNumValue, map.get(isNumValue) + 1)\n      } else {\n        map.set(isNumValue, 1)\n      }\n    }\n  });\n\n  const sortedArray = Array.from(map.keys());\n\n  if(!sortedArray || !sortedArray.length) return;\n  sortedArray.sort(ascending)\n  \n  return sortedArray.map(key => {\n    return (\n      {\n        x: key,\n        y: +(map.get(key))\n      }\n    )\n  })\n}\n\nconst COLOR_RANGE = scaleThreshold()\n  .domain([-0.6, -0.45, -0.3, -0.15, 0, 0.15, 0.3, 0.45, 0.6, 0.75, 0.9, 1.05, 1.2])\n  .range([\n    [65, 182, 196],\n    [127, 205, 187],\n    [199, 233, 180],\n    [237, 248, 177],\n    // zero\n    [255, 255, 204],\n    [255, 237, 160],\n    [254, 217, 118],\n    [254, 178, 76],\n    [253, 141, 60],\n    [252, 78, 42],\n    [227, 26, 28],\n    [189, 0, 38],\n    [128, 0, 38]\n  ]);\n\nconst generateDeckLayer = (name, data, renderTooltip, options) => {\n  const addOptionsToObject = (opt, obj) => {\n    Object.keys(opt).forEach(key =>\n      obj[key] = opt[key]\n    )\n  }\n  if (name === 'hex') {\n    const hexObj = {\n      id: 'hexagon-layer',\n      data: data,\n      pickable: true,\n      extruded: true,\n      radius: 100,\n      elevationScale: 1,\n      getPosition: d => d.geometry.coordinates,\n      onHover: renderTooltip\n    }\n    addOptionsToObject(options, hexObj)\n    return (new HexagonLayer(hexObj))\n  } else if (name === 'hex') {\n    const scatterObj = {\n      id: 'scatterplot-layer',\n      data,\n      pickable: true,\n      opacity: 0.8,\n      radiusScale: 6,\n      radiusMinPixels: 1,\n      radiusMaxPixels: 100,\n      getPosition: d => d.geometry.coordinates,\n      getRadius: d => Math.sqrt(d.exits),\n      getColor: d => [255, 140, 0],\n      onHover: renderTooltip\n    }\n    addOptionsToObject(options, scatterObj)\n    return (new ScatterplotLayer(scatterObj))\n  } else if (name === 'geojson') {\n    const geojsonObj = {\n      id: 'geojson-layer',\n      data,\n      pickable: true,\n      stroked: false,\n      filled: true,\n      extruded: true,\n      lineWidthScale: 20,\n      lineWidthMinPixels: 2,\n      // getFillColor: [160, 160, 180, 200],\n      // getLineColor: [255, 160, 180, 200],\n      getRadius: 100,\n      getLineWidth: 1,\n      getElevation: 30,\n      onHover: renderTooltip,\n      // for default repo only\n      getElevation: f => Math.sqrt(f.properties.valuePerSqm) * 10,\n      // getFillColor: f => COLOR_RANGE(f.properties.growth),\n    }\n    addOptionsToObject(options, geojsonObj)\n    return (new GeoJsonLayer(geojsonObj))\n  } else if (name === 'icon') {\n    /**\n     * There are three files the layer need to display the icons:\n     * (1) location-icon-atlas.png which is in /public\n     * (2) ./location-icon-mapping.json which deals with mapping the icon to pixels on (1)\n     * (3) ./icon-cluster-layer.json which is a DeckGL CompositLayer component that\n     * does the clustering.\n     */\n    //icon from https://github.com/uber/deck.gl/blob/8d5b4df9e4ad41eaa1d06240c5fddb922576ee21/website/src/static/images/icon-atlas.png\n    const iconObj = {\n      id: 'icon-layer',\n      data,\n      pickable: true,\n      iconAtlas: atlas,\n      iconMapping: mapping,\n      sizeScale: 60,\n      getPosition: d => d.geometry.coordinates,\n      wrapLongitude: true,\n      // getIcon: d => 'marker-1',\n      // getSize: d => 5,\n      // getColor: d => [Math.sqrt(d.exits), 140, 0],\n      onHover: renderTooltip\n    }\n    addOptionsToObject(options, iconObj)\n    return (new IconClusterLayer(iconObj))\n  } else if (name === 'sgrid') {\n    const sgridObject = {\n      id: 'screen_grid',\n      data,\n      getPosition: d => d.geometry.coordinates,\n      // getWeight: d => d.properties.weight,\n      cellSizePixels: 4,\n      // colorRange,\n      // gpuAggregation,\n      onHover: renderTooltip\n    }\n    addOptionsToObject(options, sgridObject)\n    return (new ScreenGridLayer(sgridObject))\n  } else if (name === 'grid') {\n    const gridObject = {\n      id: 'screen_grid',\n      data,\n      pickable: true,\n      extruded: true,\n      cellSize: 100,\n      elevationScale: 4,\n      getPosition: d => d.geometry.coordinates,\n      onHover: renderTooltip\n    }\n    addOptionsToObject(options, gridObject)\n    return (new GridLayer(gridObject))\n  } else if (name === 'line') {\n    const lineObject = {\n      id: 'line-layer',\n      data,\n      pickable: true,\n      onHover: renderTooltip\n    }\n    addOptionsToObject(options, lineObject)\n    return (new LineLayer(lineObject))\n  } else if (name === 'arc') {\n    const arcObject = {\n      id: 'arc-layer',\n      data,\n      pickable: true,\n      onHover: renderTooltip\n      // getSourcePosition: d => d.geometry.coordinates[0],\n      // getTargetPosition: d => d.geometry.coordinates[1],\n    }\n    addOptionsToObject(options, arcObject)\n    return (new ArcLayer(arcObject))\n  } else if (name === 'path') {\n    const pathObject = {\n      id: 'path-layer',\n      data,\n      pickable: true,\n      onHover: renderTooltip\n    }\n    addOptionsToObject(options, pathObject)\n    return (new PathLayer(pathObject))\n  } else if (name === 'heatmap') {\n    const heatObject = {\n      id: 'heatmap-layer',\n      data,\n      pickable: true,\n      onHover: renderTooltip,\n    }\n    addOptionsToObject(options, heatObject);\n    return (new HeatmapLayer(heatObject))\n  } else if (name === \"scatterplot\") {\n    const scatterObject = {\n      id: 'scatterplot',\n      data,\n      pickable: true,\n      onHover: renderTooltip,\n      opacity: 0.3\n    }\n    addOptionsToObject(options, scatterObject);\n    return (new ScatterplotLayer(scatterObject))\n  } else if (name === \"text\") {\n    const textObject = {\n      id: 'text-layer',\n      data,\n      pickable: true,\n      onHover: renderTooltip,\n    }\n    addOptionsToObject(options, textObject);\n    return (new TextLayer(textObject))\n  } else if (name === \"barvis\") {\n    const barvisObject = {\n      id: 'barvis-layer',\n      data,\n      pickable: true,\n      onHover: renderTooltip,\n    }\n    addOptionsToObject(options, barvisObject);\n    return (new BarLayer(barvisObject))\n  }\n\n  return (null)\n}\n\nconst getCentroid = (coords) => {\n  let center = coords.reduce((x, y) => {\n    return [x[0] + y[0] / coords.length, x[1] + y[1] / coords.length]\n  }, [0, 0])\n  center = [parseFloat(center[1].toFixed(3)), parseFloat(center[0].toFixed(3))]\n  return center;\n}\n\nconst convertRange = (oldValue = 2, values = {\n  oldMax: 10, oldMin: 1,\n  newMax: 1, newMin: 0\n}) => {\n  // thanks to https://stackoverflow.com/a/929107/2332101\n  // OldRange = (OldMax - OldMin)  \n  // NewRange = (NewMax - NewMin)  \n  // NewValue = (((OldValue - OldMin) * NewRange) / OldRange) + NewMin\n  let value = (((oldValue - values.oldMin) * (values.newMax - values.newMin))\n    / (values.oldMax - values.oldMin)) + values.newMin\n  return +value.toFixed(2)\n}\n\nconst getParamsFromSearch = (search) => {\n  if (!search) return (null);\n\n  const qsResult = qs.parse(search.replace(\"?\", \"\"))\n  // 3 decimal points is street level\n  const lat = Number(qsResult.lat).toFixed(3);\n  const lng = Number(qsResult.lng).toFixed(3);\n  return ({\n    latitude: !isNaN(lat) ? Number(lat) : 53.8321,\n    longitude: !isNaN(lng) ? Number(lng) : -1.6362,\n    zoom: Number(qs.parse(search).zoom) || 10,\n    pit: Number(qs.parse(search).pit) || 55,\n    bea: Number(qs.parse(search).bea) || 0,\n    alt: Number(qs.parse(search).alt) || 1.5,\n  })\n};\n\nconst getBbx = (bounds) => {\n  if (!bounds) return null;\n  // xmin = -1.6449\n  // ymin = 53.82925\n  // xmax = -1.6270\n  // ymax = 53.8389\n  let xmin = bounds._sw.lng;\n  let xmax = bounds._ne.lng;\n  let ymin = bounds._sw.lat;\n  let ymax = bounds._ne.lat;\n  if (xmin > xmax) {\n    xmax = bounds._sw.lng;\n    xmin = bounds._ne.lng;\n  }\n  if (ymin > ymax) {\n    ymax = bounds._sw.lat;\n    ymin = bounds._ne.lat;\n  }\n  return ({ xmin, ymin, xmax, ymax })\n}\n\nconst suggestDeckLayer = (geojson) => {\n  // basic version should suggest a layer\n  // based on the geojson data types\n  // go through each feature? in case of features.\n\n}\nconst suggestUIforNumber = (number) => {\n  // \"checkbox\",     \n  // \"radio\",        \n  // \"buttongroups\", \n  // \"dropdown\",     \n  // \"slider\"])      \n  const { UI_LIST } = Constants;\n  if (!number) return UI_LIST[1];\n  if (number === 1) {\n    return UI_LIST[0];\n  } else if (number > 3 && number <= 6) {\n    return UI_LIST[1];\n  } else if (number === 2 || number === 3) {\n    return UI_LIST[2];\n  } else if (number > 9 && number < 15) {\n    return UI_LIST[3];\n  } else {\n    return UI_LIST[4]; // slider\n  }\n}\n\n/**\n * Changes a `_` separated `str` to space separated and\n * camel cases all words\n * \n * @param {*} str \n */\nconst humanize = (str) => {\n  if (!str) return str\n  let frags = str.split('_');\n  for (let i = 0; i < frags.length; i++) {\n    frags[i] = frags[i].charAt(0).toUpperCase() + frags[i].slice(1);\n  }\n  return frags.join(' ');\n}\n\nconst shortenName = (name, n = 26) => {\n  if (isNumber(name)) {\n    return parseFloat(Number.parseFloat(name).toFixed(2).toString())\n  }\n  if (!name || name.length <= n || !isString(name)) return name;\n  let shortened = name.trim();\n  const extension = name.split('.').length > 1 &&\n    name.split('.').pop().length < 10 && name.split('.').pop();\n  shortened.replace(extension, \"\");\n  if (name.length > 10) {\n    shortened = shortened.substring(0, 10) + \"...\" + (extension || \"\")\n  }\n  return (shortened);\n}\n\nconst percentDiv = (title, left, cb, dark) => {\n  return (\n    <div\n      key={title}\n      onClick={() => typeof (cb) === 'function' && cb()}\n      style={{\n        cursor: 'pointer',\n        textAlign: 'center',\n        position: 'relative',\n        float: 'left',\n        width: '30%',\n        color: dark ? 'white' : 'black',\n        margin: '10px 2px',\n        border: '1px solid gray',\n      }}>\n      <span style={{ position: 'absolute', left: '10%' }}>\n        {title}\n      </span>\n      <div style={{\n        width: left + '%',\n        height: 20,\n        background: 'rgb(18, 147, 154)',\n        // background: 'rgb(200, 120, 0)'\n      }}>\n      </div>\n    </div>\n  )\n}\n\n/**\n * Thanks to https://stackoverflow.com/a/34695026/2332101\n * @param {*} str \n */\nconst isURL = (str) => {\n  var a = document.createElement('a');\n  a.href = str;\n  return (a.host && a.host !== window.location.host);\n}\n\nconst isMobile = function () {\n  var check = false;\n  if (window.innerWidth < 640) return true;\n  (function (a) { if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw-(n|u)|c55\\/|capi|ccwa|cdm-|cell|chtm|cldc|cmd-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc-s|devi|dica|dmob|do(c|p)o|ds(12|-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(-|_)|g1 u|g560|gene|gf-5|g-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd-(m|p|t)|hei-|hi(pt|ta)|hp( i|ip)|hs-c|ht(c(-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i-(20|go|ma)|i230|iac( |-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|-[a-w])|libw|lynx|m1-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|-([1-8]|c))|phil|pire|pl(ay|uc)|pn-2|po(ck|rt|se)|prox|psio|pt-g|qa-a|qc(07|12|21|32|60|-[2-7]|i-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h-|oo|p-)|sdk\\/|se(c(-|0|1)|47|mc|nd|ri)|sgh-|shar|sie(-|m)|sk-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h-|v-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl-|tdg-|tel(i|m)|tim-|t-mo|to(pl|sh)|ts(70|m-|m3|m5)|tx-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas-|your|zeto|zte-/i.test(a.substr(0, 4))) check = true; })(navigator.userAgent || navigator.vendor || window.opera);\n  return check;\n};\n\nfunction hexToRgb(hex) {\n  let bigint = parseInt(hex.substring(1, hex.length), 16);\n  let r = (bigint >> 16) & 255;\n  let g = (bigint >> 8) & 255;\n  let b = bigint & 255;\n\n  return 'rgb(' + r + \",\" + g + \",\" + b + \")\";\n}\n\n/**\n * Generate colour scale for unique set of values\n * based on the index of a value in an array domain of the set.\n * \n * @param {object} d particular property to get color for from features\n * @param {*} p index/name of column to generate color scale with\n * @param {Array} domain output from generateDomain\n * @param {Number} alpha value to add to colour pallete\n */\nconst colorScale = (d, p = 0, domain, alpha = 180) => {\n  if (!d || !isArray(domain) || !domain.length) return null;\n  const index = domain.indexOf(d.properties[p])\n  let rgb = interpolateOrRd(index / domain.length);\n  rgb = rgb.substring(4, rgb.length - 1)\n    .replace(/ /g, '')\n    .split(',').map(x => +x); // deck.gl 8 int not strings\n  return [...rgb, alpha]\n}\n\nconst colorRangeNames = ['inverseDefault', 'yellowblue', 'greens',\n  'oranges', 'diverge', 'default'];\n\nconst colorRanges = (name) => {\n  if (!name) return\n  const colors = {\n    yellowblue: [\n      [255, 255, 204],\n      [199, 233, 180],\n      [127, 205, 187],\n      [65, 182, 196],\n      [44, 127, 184],\n      [37, 52, 148]\n    ],\n    greens: [\n      [237, 248, 233],\n      [199, 233, 192],\n      [161, 217, 155],\n      [116, 196, 118],\n      [49, 163, 84],\n      [0, 109, 44],\n    ],\n    oranges: [\n      [254, 237, 222],\n      [253, 208, 162],\n      [253, 174, 107],\n      [253, 141, 60],\n      [230, 85, 13],\n      [166, 54, 3],\n    ],\n    diverge: [\n      [140, 81, 10],\n      [216, 179, 101],\n      [246, 232, 195],\n      [199, 234, 229],\n      [90, 180, 172],\n      [1, 102, 94]\n    ],\n    inverseDefault: [\n      [189, 0, 38],\n      [240, 59, 32],\n      [253, 141, 60],\n      [254, 178, 76],\n      [254, 217, 118],\n      [255, 255, 178]\n    ],\n    default: [\n      [255, 255, 178],\n      [254, 217, 118],\n      [254, 178, 76],\n      [253, 141, 60],\n      [240, 59, 32],\n      [189, 0, 38],\n    ]\n  }\n  return (colors[name])\n}\n\nconst iconJSType = (dataType) => {\n  // describeFeatureVariables in geojsonutils\n  // String, Number, Boolean and Object\n  if (!dataType) return (null)\n  switch (dataType) {\n    case \"String\":\n      dataType = \"fa fa-globe\";\n      break;\n    case \"Number\":\n      dataType = \"fa fa-list\";\n      break;\n    case \"Object\":\n      dataType = \"fa fa-sack\";\n      break;\n    default:\n      dataType = \"fa fa-question-circle\";\n  }\n  return dataType\n}\n\nconst searchNominatom = (location, callback) => {\n  const url = \"https://nominatim.openstreetmap.org/search/\" +\n    location + \"?format=json\";\n  fetchData(url, (json) => {\n    typeof callback === 'function' && callback(json)\n  })\n}\n\nconst ATILOGO = (dark = true) => (\n  <g id=\"Page-1\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n    <g id=\"ATI_logo_black_ATI_logo_black_W1024px\" fill={dark ? \"#ffffff\" : '#000000'}>\n      <g id=\"logo-line-1\" data-svg-origin=\"0.8190000057220459 0.7929999828338623\" transform=\"matrix(1,0,0,1,0,0)\" style={{ zIndex: 0, visibility: 'inherit', opacity: 1 }}>\n        <path d=\"M273.346,71.521 L233.737,71.521 C235.771,58.945 242.738,52.485 253.966,52.485 C265.183,52.485 272.837,60.128 273.346,71.521 M299.694,83.932 C299.694,52.816 282.185,33.27 254.131,33.27 C226.425,33.27 207.72,52.816 207.72,81.718 C207.72,111.985 226.08,131.363 254.983,131.363 C277.938,131.363 293.744,120.479 299.529,100.424 L272.495,100.424 C269.775,107.735 263.987,111.475 255.493,111.475 C242.573,111.475 234.588,103.654 233.902,90.05 L299.529,90.05 C299.694,87.327 299.694,84.948 299.694,83.932\" id=\"Fill-13\"></path>\n        <path d=\"M117.531,128.642 L143.027,128.642 L143.027,83.08 C143.027,63.192 148.647,53.667 160.371,53.667 C171.081,53.667 175.162,59.62 175.162,74.751 L175.162,128.642 L200.658,128.642 L200.658,72.031 C200.658,57.749 198.622,50.437 193.181,44.156 C187.738,37.861 178.392,33.78 169.209,33.78 C159.354,33.78 149.664,38.713 143.027,47.042 L143.027,0.793 L117.531,0.793 L117.531,128.642\" id=\"Fill-12\"></path>\n        <polyline id=\"Fill-11\" points=\"55.645 0.796 0.819 0.796 0.819 23.242 42.3 23.242 42.3 128.632 69.158 128.632 69.158 23.242 110.474 23.242 110.474 0.796 55.645 0.796\"></polyline>\n      </g>\n      <g id=\"logo-line-2\" transform=\"matrix(1,0,0,1,169,149)\" data-svg-origin=\"0.9760000109672546 0.0860000029206276\" style={{ zIndex: 0, visibility: 'inherit', opacity: 1 }}>\n        <path d=\"M831.16,79.656 C831.16,94.445 823.69,104.3 812.635,104.3 C801.586,104.3 794.45,94.279 794.45,78.804 C794.45,63.671 801.928,53.308 812.814,53.308 C824.03,53.308 831.16,63.506 831.16,79.656 M855.82,108.724 L855.82,35.289 L832.87,35.289 L832.87,46.848 C825.9,37.158 818.078,33.076 807.029,33.076 C784.253,33.076 768.268,52.112 768.268,78.97 C768.268,106.169 783.222,124.202 805.668,124.202 C817.571,124.202 825.05,120.451 831.85,111.281 L831.85,120.972 C831.85,137.794 826.24,145.106 813.486,145.106 C804.306,145.106 798.025,140.515 797.504,133.382 L772.173,133.382 C773.877,152.076 789.175,163.125 813.145,163.125 C835.42,163.125 849.19,154.121 853.95,136.268 C855.65,129.631 855.82,127.087 855.82,108.724\" id=\"Fill-22\"></path>\n        <path d=\"M701.193,35.283 L676.88,35.283 L676.88,127.932 L702.389,127.932 L702.389,79.994 C702.389,61.465 707.819,52.792 719.557,52.792 C724.997,52.792 729.589,55.349 732.133,59.417 C733.836,62.482 734.346,65.547 734.346,73.534 L734.346,127.932 L759.842,127.932 L759.842,75.402 C759.842,58.91 758.825,52.957 755.085,47.007 C749.476,38.168 739.951,33.249 728.227,33.249 C716.834,33.249 707.144,38.168 701.193,46.841 L701.193,35.283\" id=\"Fill-21\"></path>\n        <path d=\"M637.104,24.567 L662.601,24.567 L662.601,0.088 L637.104,0.088 L637.104,24.567 Z M637.104,127.938 L662.601,127.938 L662.601,35.285 L637.104,35.285 L637.104,127.938 Z\" id=\"Fill-20\"></path>\n        <path d=\"M569.69,127.936 L595.186,127.936 L595.186,86.965 C595.186,64.189 601.991,55.339 619.334,55.339 C622.055,55.339 623.747,55.515 626.467,56.191 L626.467,34.09 C624.089,33.238 622.564,33.073 619.676,33.073 C608.106,33.073 598.926,38.172 594.004,47.352 L594.004,35.286 L569.69,35.286 L569.69,127.936\" id=\"Fill-19\"></path>\n        <path d=\"M532.476,127.936 L556.789,127.936 L556.789,35.286 L531.28,35.286 L531.28,83.225 C531.28,93.259 530.442,98.358 527.884,102.44 C524.822,107.538 519.721,110.424 514.112,110.424 C508.672,110.424 504.08,108.048 501.536,103.798 C499.833,100.737 499.323,97.672 499.323,89.685 L499.323,35.286 L473.827,35.286 L473.827,87.816 C473.827,104.308 474.847,110.259 478.584,116.212 C484.193,125.05 493.883,129.97 505.442,129.97 C516.67,129.97 526.36,125.05 532.476,116.377 L532.476,127.936\" id=\"Fill-18\"></path>\n        <polyline id=\"Fill-17\" points=\"425.87 127.936 452.728 127.936 452.728 22.531 494.041 22.531 494.041 0.086 384.389 0.086 384.389 22.531 425.87 22.531 425.87 127.936\"></polyline>\n        <path d=\"M287.694,35.283 L263.38,35.283 L263.38,127.932 L288.89,127.932 L288.89,79.994 C288.89,61.465 294.319,52.792 306.057,52.792 C311.498,52.792 316.089,55.349 318.633,59.417 C320.336,62.482 320.846,65.547 320.846,73.534 L320.846,127.932 L346.342,127.932 L346.342,75.402 C346.342,58.91 345.325,52.957 341.585,47.007 C335.977,38.168 326.452,33.249 314.728,33.249 C303.334,33.249 293.644,38.168 287.694,46.841 L287.694,35.283\" id=\"Fill-16\"></path>\n        <path d=\"M226.718,85.77 C226.718,102.428 219.24,111.952 206.144,111.952 C197.991,111.952 192.206,107.364 192.206,101.08 C192.206,93.934 198.501,90.362 214.472,87.818 L223.322,86.456 C223.653,86.28 224.849,86.115 226.718,85.77 M250.687,87.473 C250.852,80.671 250.852,76.59 250.852,74.553 C250.852,57.388 248.818,50.077 241.851,43.272 C235.046,36.305 224.339,32.565 210.912,32.565 C186.088,32.565 170.448,44.468 169.254,64.356 L195.436,64.356 C195.944,55.175 201.221,50.584 211.419,50.584 C221.961,50.584 226.552,56.192 226.718,69.278 C215.5,69.964 200.37,72.177 192.041,74.388 C174.353,78.635 165.68,87.818 165.68,101.92 C165.68,118.413 179.451,129.971 199.353,129.971 C214.307,129.971 223.653,125.049 230.457,113.656 L230.457,117.396 C230.457,120.967 230.623,122.839 231.309,127.937 L253.244,127.937 C251.373,120.116 250.687,110.935 250.687,96.147 L250.687,87.473\" id=\"Fill-15\"></path>\n        <polygon id=\"Fill-14\" points=\"130.939 127.937 156.435 127.937 156.435 0.087 130.939 0.087\"></polygon>\n        <path d=\"M79.347,73.37 L45.508,73.37 L62.51,20.319 L79.347,73.37 Z M125.075,127.937 L80.529,0.087 L45.343,0.087 L0.976,127.937 L28.341,127.937 L38.541,96.311 L86.659,96.311 L97.024,127.937 L125.075,127.937 Z\" id=\"Fill-1\"></path>\n      </g>\n      <g id=\"logo-line-3\" transform=\"matrix(1,0,0,1,24,297)\" data-svg-origin=\"0.7670000195503235 0.34700000286102295\" style={{ zIndex: 0, visibility: 'inherit', opacity: 1 }}>\n        <path d=\"M592.476,71.073 L552.866,71.073 C554.9,58.497 561.868,52.037 573.096,52.037 C584.313,52.037 591.966,59.68 592.476,71.073 M618.824,83.484 C618.824,52.368 601.315,32.822 573.261,32.822 C545.552,32.822 526.849,52.368 526.849,81.273 C526.849,111.537 545.21,130.915 574.113,130.915 C597.068,130.915 612.874,120.031 618.659,99.976 L591.625,99.976 C588.902,107.29 583.117,111.028 574.623,111.028 C561.702,111.028 553.718,103.206 553.032,89.602 L618.659,89.602 C618.824,86.879 618.824,84.501 618.824,83.484\" id=\"Fill-10\"></path>\n        <path d=\"M521.303,35.543 L506.348,35.543 L506.348,13.1 L480.839,13.1 L480.839,35.543 L467.246,35.543 L467.246,54.758 L480.839,54.758 L480.839,97.256 C480.839,109.501 481.858,114.765 485.43,120.029 C490.187,127.175 497.168,130.24 508.548,130.24 C513.826,130.24 516.546,129.898 521.303,128.702 L521.303,109.666 C518.238,110.008 517.221,110.173 516.039,110.173 C509.058,110.173 506.348,106.271 506.348,96.236 L506.348,54.758 L521.303,54.758 L521.303,35.543\" id=\"Fill-9\"></path>\n        <path d=\"M434.281,128.196 L458.595,128.196 L458.595,35.546 L433.085,35.546 L433.085,83.485 C433.085,93.52 432.247,98.618 429.69,102.7 C426.625,107.799 421.527,110.684 415.918,110.684 C410.478,110.684 405.886,108.308 403.342,104.061 C401.639,100.997 401.129,97.932 401.129,89.945 L401.129,35.546 L375.633,35.546 L375.633,88.076 C375.633,104.568 376.65,110.519 380.39,116.472 C385.998,125.31 395.689,130.23 407.247,130.23 C418.476,130.23 428.163,125.31 434.281,116.637 L434.281,128.196\" id=\"Fill-8\"></path>\n        <path d=\"M364.433,35.543 L349.479,35.543 L349.479,13.1 L323.969,13.1 L323.969,35.543 L310.376,35.543 L310.376,54.758 L323.969,54.758 L323.969,97.256 C323.969,109.501 324.989,114.765 328.56,120.029 C333.317,127.175 340.298,130.24 351.678,130.24 C356.956,130.24 359.676,129.898 364.433,128.702 L364.433,109.666 C361.368,110.008 360.351,110.173 359.169,110.173 C352.188,110.173 349.479,106.271 349.479,96.236 L349.479,54.758 L364.433,54.758 L364.433,35.543\" id=\"Fill-7\"></path>\n        <path d=\"M288.764,0.347 L276.009,0.347 L276.009,24.823 L301.519,24.823 L301.519,0.347 L288.764,0.347 Z M288.764,35.533 L276.009,35.533 L276.009,128.197 L301.519,128.197 L301.519,35.533 L288.764,35.533 Z\" id=\"Fill-6\"></path>\n        <path d=\"M265.918,35.543 L250.964,35.543 L250.964,13.1 L225.454,13.1 L225.454,35.543 L211.862,35.543 L211.862,54.758 L225.454,54.758 L225.454,97.256 C225.454,109.501 226.474,114.765 230.046,120.029 C234.803,127.175 241.784,130.24 253.164,130.24 C258.441,130.24 261.162,129.898 265.918,128.702 L265.918,109.666 C262.854,110.008 261.837,110.173 260.654,110.173 C253.673,110.173 250.964,106.271 250.964,96.236 L250.964,54.758 L265.918,54.758 L265.918,35.543\" id=\"Fill-5\"></path>\n        <path d=\"M207.476,65.123 C207.641,44.891 193.194,32.825 168.373,32.825 C144.404,32.825 129.105,44.384 129.105,62.238 C129.105,69.029 131.991,75.83 137.092,80.422 C142.877,85.697 148.993,88.076 165.995,91.65 C178.57,94.359 183.162,97.421 183.162,103.209 C183.162,108.638 177.553,112.213 169.059,112.213 C158.341,112.213 152.732,107.111 152.909,97.256 L126.892,97.256 C127.236,118.849 142.367,130.918 168.883,130.918 C194.048,130.918 209.689,119.357 209.689,100.83 C209.689,86.714 201.36,78.209 182.997,73.452 L164.633,68.698 C157.666,66.826 154.601,64.272 154.601,60.19 C154.601,54.581 159.369,51.186 167.356,51.186 C177.719,51.186 181.98,55.091 182.487,65.123 L207.476,65.123\" id=\"Fill-4\"></path>\n        <path d=\"M61.442,35.543 L37.128,35.543 L37.128,128.192 L62.638,128.192 L62.638,80.254 C62.638,61.725 68.068,53.055 79.806,53.055 C85.246,53.055 89.838,55.609 92.381,59.68 C94.085,62.742 94.594,65.807 94.594,73.794 L94.594,128.192 L120.091,128.192 L120.091,75.662 C120.091,59.17 119.074,53.22 115.334,47.267 C109.725,38.428 100.2,33.509 88.476,33.509 C77.083,33.509 67.392,38.428 61.442,47.102 L61.442,35.543\" id=\"Fill-3\"></path>\n        <polyline id=\"Fill-2\" points=\"13.508 0.347 0.767 0.347 0.767 128.197 26.249 128.197 26.249 0.347 13.508 0.347\"></polyline>\n      </g>\n    </g>\n  </g>\n)\n\n/**\n * \n * @param {*} options \n */\nconst generateLegend = (options) => {\n  //quick check \n  const { domain, interpolate = interpolateOrRd, title } = options;\n  if (!domain || !Array.isArray(domain) || !isNumber(domain[0])) return\n  const jMax = domain[domain.length - 1], jMin = domain[0];\n  const legend = [<p key='title'>{title}</p>]\n\n  for (var i = 0; i < 10; i += 1) {\n    legend.push(\n      <>\n        {i === 0 &&\n          <i>{(title === humanize('Mean.Travel.Time..Seconds.') ?\n            +(jMin) / 300 : jMin).toFixed(2)\n          }</i>\n        }\n        <span key={i} style={{ background: interpolate(i / 10) }}>\n        </span>\n        {i === 9 &&\n          <i>{(title === humanize('Mean.Travel.Time..Seconds.') ?\n            +(jMax) / 300 : jMax).toFixed(2)\n          }</i>\n        }\n      </>)\n  }\n  return legend;\n}\n\n/**\n * \n * @param {*} data features from a geojson object\n * @param {*} column \n */\nconst generateDomain = (data, column) => {\n  if (!data || !Array.isArray(data) || !column || !data.length) return;\n  let domainIsNumeric = true;\n  let domain = [];\n  data.forEach(feature => {\n    // uber move to show isochrones\n    const i = feature.properties[\n      isNumber(column) ? Object.keys(feature.properties)[column] : column\n    ]; // eliminate nulls\n    if(!i) return;\n    if (isNumber(i) &&\n      column === 'Mean.Travel.Time..Seconds.') {\n        domain.push(Math.floor(i / 300));\n    } else {\n      if(isNumber(i)) {\n        domain.push(+(i))\n      } else {\n        domainIsNumeric = false;\n        domain.push(i)\n      }\n    }\n  });\n  domain = Array.from(new Set(domain));\n  // sort the domain if possible\n  if (domainIsNumeric) {\n    domain = domain.sort((a, b) => { return (a - b); });\n  }\n  return domain\n}\n\nconst sortNumericArray = (array) => {\n  let domainIsNumeric = true;\n  // sort the domain if possible\n  array.map(e => !isNumber(e) && (domainIsNumeric = false))\n  if (domainIsNumeric) {\n    array = array.sort((a, b) => { return (a - b); });\n  }\n  return array\n}\n\nconst getMax = (arr) => {\n  return arr.reduce((max, v) => max >= v ? max : v, -Infinity);\n}\nconst getMin = (arr) => {\n  return arr.reduce((max, v) => max <= v ? max : v, Infinity);\n}\n\nconst OSMTILES = {\n  \"version\": 8,\n  \"sources\": {\n    \"simple-tiles\": {\n      \"type\": \"raster\",\n      \"tiles\": [\n        // \"http://tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        // \"http://b.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        // \"http://tile.stamen.com/toner/{z}/{x}/{y}.png\"\n        'https://stamen-tiles.a.ssl.fastly.net/terrain/{z}/{x}/{y}.jpg'\n      ],\n      \"tileSize\": 256\n    }\n  },\n  \"layers\": [{\n    \"id\": \"simple-tiles\",\n    \"type\": \"raster\",\n    \"source\": \"simple-tiles\",\n  }]\n};\n\nexport {\n  getResultsFromGoogleMaps,\n  getParamsFromSearch,\n  xyObjectByProperty,\n  suggestUIforNumber,\n  generateDeckLayer,\n  checkURLReachable,\n  suggestDeckLayer,\n  sortNumericArray,\n  colorRangeNames,\n  searchNominatom,\n  generateLegend,\n  generateDomain,\n  convertRange,\n  getCentroid,\n  shortenName,\n  colorRanges,\n  COLOR_RANGE,\n  percentDiv,\n  iconJSType,\n  colorScale,\n  fetchData,\n  OSMTILES,\n  humanize,\n  isMobile,\n  ATILOGO,\n  getBbx,\n  getMin,\n  getMax,\n  isURL,\n}","import React, { useState } from 'react';\nimport {\n  makeWidthFlexible,\n  XYPlot, XAxis, YAxis, MarkSeries,\n  Hint\n} from 'react-vis';\nimport { format } from 'd3-format';\n\nimport { shortenName } from '../../utils';\nimport { PLOT_W } from '../../Constants';\n\nconst W = PLOT_W;\nconst FlexibleXYPlot = makeWidthFlexible(XYPlot);\n\nexport default function SeriesPlot(options) {\n  const [hint, setHint] = useState();\n  const [x, setX] = useState(null);\n  const [y, setY] = useState(null);\n  const [x1, setX1] = useState(null);\n  const [y1, setY1] = useState(null);\n  const [rect, setRect] = useState(null);\n  const [selected, setSelected] = useState([]);\n\n  const ReactSeries = options.type;\n  if (!ReactSeries) return null;\n  const limit = 10;\n\n  const data = options.type !== MarkSeries && !options.noLimit &&\n    options.data && options.data.length > limit ? options.data.slice(0, limit)\n    : options.data;\n\n  const { plotStyle, title, noXAxis, noYAxis,\n    onValueClick, onDragSelected } = options;\n\n  if (!data || !data.length) return null\n\n  const dataWithColor = data.map((d, i) => ({\n    ...d,\n    // if selected return 0 which is:\n    // ['rgb(239, 93, 40)', 'rgb(18, 147, 154)']\n    color: data.length === selected.length ? 0 : Number(!selected.includes(i))\n  }));\n  return (\n    // https://github.com/uber/react-vis/issues/584#issuecomment-401693372\n    <div className=\"unselectable\"\n      style={{ position: 'relative' }}\n      onMouseDown={(e) => {\n        if (!x && !y) {\n          setX(e.clientX); setY(e.clientY)\n        }\n      }}\n      onMouseMove={(e) => {\n        if (x && y) {\n          const newX = e.clientX; const newY = e.clientY;\n          setX1(newX); setY1(newY);\n          setRect(\n            <div style={{\n              position: 'fixed',\n              left: x > newX ? newX : x, top: y > y1 ? newY : y,\n              width: Math.abs(newX - x), height: Math.abs(newY - y),\n              backgroundColor: 'gray', opacity: 0.2\n            }} />\n          )\n        }\n      }}\n      onMouseUp={(e) => {\n        setX(null); setY(null); setX1(null); setY1(null);\n        setRect(null);\n        if (rect) {\n          typeof (onDragSelected) === 'function' &&\n            onDragSelected(selected.map(e =>\n              dataWithColor[e] && dataWithColor[e].x))\n        }\n        setSelected([])\n      }}\n      onMouseOut={() => {\n        if (!rect) {\n          setSelected([])\n        }\n      }}\n    >\n      {options.type !== MarkSeries && !options.noLimit &&\n        options.data && options.data.length > limit &&\n        <h4>Plotting first {limit} values:</h4>}\n      {noYAxis && title &&\n        <h4>{title}</h4>\n      }\n      <FlexibleXYPlot xType=\"ordinal\"\n        margin={{ bottom: (plotStyle && plotStyle.marginBottom) || 40 }} // default is 40\n        animation={{ duration: 1 }}\n        height={(plotStyle && plotStyle.height) || W}\n        width={(plotStyle && plotStyle.width) || W}\n        onMouseLeave={() => { setHint(false) }}\n      >\n        {!noXAxis && // if provided dont\n          <XAxis\n            tickSize={0}\n            tickFormat={v => shortenName(v, 10)}\n            tickValues={\n              (data.length > limit)\n                ? data\n                  .filter((item, idx) => {\n                    if ((idx % Math.floor(data.length / limit)) === 0) {\n                      return item.x\n                    }\n                  }).map(item => (item.x))\n                : data.map(item => (item.x))\n            }\n            position=\"right\" tickLabelAngle={-65} style={{\n              line: { strokeWidth: 0 },\n              text: { fill: options.dark ? '#fff' : '#000' } //, fontWeight: plotStyle && plotStyle.fontWeight || 400 }\n            }} />}\n        {!noYAxis && // if provided dont\n          <YAxis\n            tickSize={0}\n            tickLabelAngle={-45} tickFormat={v => format(\".2s\")(v)} style={{\n              line: { strokeWidth: 0 },\n              title: { fill: options.dark ? '#fff' : '#000' },\n              text: { fill: options.dark ? '#fff' : '#000' } //, fontWeight: plotStyle && plotStyle.fontWeight || 400 }\n            }} position=\"start\" title={title} />\n        }\n        <ReactSeries\n          onValueClick={onValueClick}\n          // see abstract-series.js\n          /*\n          onNearestX(value, {\n            innerX: xScaleFn(value),\n            index: valueIndex,\n            event: event.nativeEvent\n          });\n          */\n          onNearestX={(datapoint, { index, innerX }) => {\n            setHint({ x: datapoint.x, y: datapoint.y });\n            if (rect && isWithinRect({ x, x1, value: innerX })) {\n              if (!selected.includes(index)) { // prevent rerender\n                setSelected([...selected, index]);\n              }\n              // TODO see how one can detect \"leaving\"\n              // outside the box but rect is dragging              // setSelected(selected.filter(e => e !== index));\n            } else {\n              if (!rect) {\n                setSelected([index]); // single hover\n              }\n            }\n          }}\n          colorDomain={[0, 1]}\n          colorRange={['rgb(239, 93, 40)', 'rgb(18, 147, 154)']}\n          // style={{ fill: type === LineSeries ? 'none' : 'rgb(18, 147, 154)' }}\n          data={dataWithColor} />\n        {hint && <Hint value={hint} />}\n      </FlexibleXYPlot>\n      {x && x1 && rect}\n    </div>);\n}\n\nfunction isWithinRect(options) {\n  const { x, x1, value } = options;\n  if (x1 > x) {\n    if (value > x && value < x1) {\n      return true\n    }\n    return false\n  } else {\n    if (value < x && value < x1) {\n      return true\n    }\n    return false\n  }\n}","/*\nUtility Functions\n\nthanks https://github.com/realm/github-gantt/blob/master/utilities.js\n\n*/\nvar isString = function(x) {\n    return x !== null && x !== undefined && x.constructor === String\n}\n\nvar isNumber = function(x) {\n    return x !== null && x !== undefined && x.constructor === Number\n}\n\nvar isBoolean = function(x) {\n    return x !== null && x !== undefined && x.constructor === Boolean\n}\n\nvar isObject = function(x) {\n    return x !== null && x !== undefined && x.constructor === Object\n}\n\nvar isArray = function(x) {\n    return x !== null && x !== undefined && x.constructor === Array\n}\n\nvar isDate = function(d) {\n  if ( Object.prototype.toString.call(d) === \"[object Date]\" ) {\n    if ( isNaN( d.getTime() ) ) {\n      return false;\n    }\n    else {\n      return true;\n    }\n  }\n  else {\n    return false;\n  }\n}\n\n// var isRealmObject = function(x) {\n//     return x !== null && x !== undefined && x.constructor === Realm.Object\n// }\n\n// var isRealmList = function(x) {\n//     return x !== null && x !== undefined && x.constructor === Realm.List\n// }\n\nvar sanitizeFloat = function(number) {\n    if (isNumber(number)) {\n        return number;\n    }\n    else if (isString(number)) {\n        let n = parseFloat(number);\n        if (isNaN(n)) {\n          return null;\n        }\n        else {\n          return n;\n        }\n    }\n    else {\n        return null;\n    }\n}\n\nvar sanitizeInt = function(number) {\n    if (isNumber(number)) {\n        return number;\n    }\n    else if (isString(number)) {\n        return parseInt(number);\n    }\n    else {\n        return null;\n    }\n}\n\nvar sanitizeString = function(string) {\n    if (isString(string)) {\n        return string;\n    }\n    else if (isNumber(string)) {\n        return string.toString();\n    }\n    else {\n        return null;\n    }\n}\n\nvar sanitizeStringNonNull = function(string) {\n    if (isString(string)) {\n        return string;\n    }\n    else if (isNumber(string)) {\n        return string.toString();\n    }\n    else {\n        return \"\";\n    }\n}\n\nvar sanitizeBool = function(bool) {\n    if (isBoolean(bool)) {\n        return bool;\n    }\n    else if (isNumber(bool)) {\n        return Boolean(bool);\n    }\n    else {\n        return null;\n    }\n}\n\nfunction isEmptyOrSpaces(str){\n  return str === null || str.match(/^ *$/) !== null;\n}\n\nexports.isString = isString;\nexports.isNumber = isNumber;\nexports.isBoolean = isBoolean;\nexports.isObject = isObject;\nexports.isArray = isArray;\nexports.isDate = isDate;\n// exports.isRealmObject = isRealmObject;\n// exports.isRealmList = isRealmList;\nexports.sanitizeFloat = sanitizeFloat;\nexports.sanitizeInt = sanitizeInt;\nexports.sanitizeString = sanitizeString;\nexports.sanitizeStringNonNull = sanitizeStringNonNull;\nexports.sanitizeBool = sanitizeBool;\nexports.isEmptyOrSpaces = isEmptyOrSpaces;","import * as React from 'react';\nimport { FileUploader } from 'baseui/file-uploader';\n\nexport default class Uploader extends React.Component {\n  state = { progressAmount: 0 };\n\n  handleDrop = (acceptedFiles, rejectedFiles) => {\n    const { contentCallback } = this.props;\n    const textType = /text.*/;\n    const file = acceptedFiles[0]\n\n    if (!file.type || file.type.match(textType) || file.type.match(/geo/) \n    || file.type.match(/json/)) {\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        this.setState({ progressAmount: 100 });\n        this.reset();\n        const text = reader.result;\n        typeof (contentCallback) === 'function' &&\n          contentCallback({ text, name: file.name })\n      }\n      reader.readAsText(file);\n    } else {\n      this.setState({ progressAmount: 100 });\n      this.reset();\n      console.log(\"File not supported!\")\n    }\n    // handle file upload...\n    this.startProgress();\n  };\n\n  // startProgress method is only illustrative. Use the progress info returned\n  // from your upload endpoint. If unavailable, do not provide a progressAmount.\n  startProgress = () => {\n    this.intervalId = setInterval(() => {\n      if (this.state.progressAmount >= 100) {\n        this.reset();\n      } else {\n        this.setState({ progressAmount: this.state.progressAmount + 10 });\n      }\n    }, 500);\n  };\n\n  // reset the component to its original state. use this to cancel/retry the upload.\n  reset = () => {\n    clearInterval(this.intervalId);\n    this.setState({ progressAmount: 0 });\n  };\n\n  render() {\n    return (\n      <center className=\"file-upload\">\n        <FileUploader\n          onCancel={this.reset}\n          onDrop={this.handleDrop}\n          progressAmount={this.state.progressAmount}\n          progressMessage={\n            this.state.progressAmount &&\n            `Uploading... ${this.state.progressAmount}% of 100%`\n          }\n        />\n      </center>\n    );\n  }\n}","import React, { useState } from 'react';\nimport {\n  InputGroup, FormControl,\n  Glyphicon, FormGroup\n} from 'react-bootstrap';\n\nimport { isURL } from '../utils';\n\nexport default function URL(props) {\n  const { urlCallback } = props;\n  const [url, setUrl] = useState(\"https://domain.com/api/stats19\")\n\n  return (\n    <form\n      onKeyPress={(event) => {\n        if (event.which === 13 /* Enter */) {\n          event.preventDefault();\n          isURL(url) && typeof (urlCallback) === 'function' &&\n            urlCallback(url)\n        }\n      }}\n      className=\"search-form\">\n      <FormGroup>\n        <InputGroup>\n          <FormControl\n          onChange={(e) => {            \n            const { value } = e.target;\n            setUrl(value)\n            // console.log(isURL(value))\n          }}\n          style={{\n            background: props.dark ? '#242730' : 'white',\n            color: props.dark ? 'white' : 'black'\n          }}\n          value={url}\n          placeholder={url} type=\"text\" />\n          <InputGroup.Addon\n          style={{\n            background: props.dark ? '#242730' : 'white',\n            color: props.dark ? 'white' : 'black'\n          }}>\n            <Glyphicon \n            glyph=\"globe\" />\n          </InputGroup.Addon>\n        </InputGroup>\n      </FormGroup>\n    </form>\n  )\n}","/**\n * eAtlas code\n *  \n * React component which takes a GeoJSON object. Loops through its\n * properties and show the list to start with. Each property \n * can show all avialable values. Each value can be selected/deselected.\n *\n * Current code can deal with only one GeoJSON property's keys.\n * \n * Next is handling multiple GeoJSON key value pairs.\n * Next will be replacing current \"hard\" code in the parent code,\n * so that all key values can be dynamically filtered.\n * \n * This should be generalizeable to any GeoJSON file, or that is the\n * aim.\n */\nimport React, { useState } from 'react';\n\nimport './style.css';\nimport { humanize } from '../utils';\nimport { isEmptyOrSpaces } from '../JSUtils';\nimport { describeFeatureVariables } from '../geojsonutils';\nimport { Select, TYPE } from 'baseui/select';\nimport MultiSelect from './MultiSelect';\n\nexport default function Variables(props) {\n  const { onSelectCallback, multiVarSelect,\n    unfilteredData } = props;\n  const [columns, setColumns] = useState(multiVarSelect && \n    Object.keys(multiVarSelect))\n\n  if (!unfilteredData || !unfilteredData[0]) return null;\n\n  if (unfilteredData && Object.keys(unfilteredData[0].properties)\n    .filter(p => !isEmptyOrSpaces(p)).length === 0) {\n    return (\n      <h3>There are no columns to inspect or filter.</h3>\n    )\n  }\n  // describe first feature\n  const description = describeFeatureVariables(unfilteredData[0]);\n  const dataCols = Object.keys(unfilteredData[0].properties)\n    .filter(e => e !== \"date\") // hardcode\n    .map(e => ({\n      // Format: Column Name [String]\n      id: humanize(e) + \" [\" + description[e].name + \"]\",\n      value: e\n    }))\n\n  // unique set of keys\n  let syncColumns = Array.from(new Set(columns.map(e => e.value).concat(\n    Object.keys(multiVarSelect).filter(e => e !== \"date\") // hardcode\n  )));\n  // populate baseweb objects using description\n  syncColumns = syncColumns.map(e => ({\n    // Format: Column Name [String]\n    id: humanize(e) + \" [\" + description[e].name + \"]\",\n    value: e\n  }))\n  // console.log(columns);\n  // console.log(syncColumns);\n  // use synced column names\n  return (\n    <div style={props.style}>\n      Column to filter:\n      <Select\n        labelKey=\"id\"\n        valueKey=\"value\"\n        placeholder={\"Chose column \" + \"(\" + dataCols.length + \")\"}\n        maxDropdownHeight=\"300px\"\n        type={TYPE.search}\n        multi={true}\n        onChange={({ value }) => {\n          // sync with multiVarSelect \n          // here we remove any key in multiVarSelect that is not \n          // in the values here\n          const columnsArray = value.map(e => e.value)\n          Object.keys(multiVarSelect).map(key => {\n            //delete any that is not in value\n            if (!columnsArray.includes(key)) {\n              delete multiVarSelect[key]\n            }\n          })\n          typeof (onSelectCallback) === 'function' &&\n            onSelectCallback(multiVarSelect)\n          setColumns(value)\n        }}\n        value={syncColumns}\n        options={dataCols}\n      />\n      {\n        syncColumns && syncColumns.map(e => e.value)\n          .map(key => {\n            const columnValues = [];\n            unfilteredData.forEach(feature =>\n              Object.keys(feature.properties).forEach(property =>\n                property === key && feature.properties[key] &&\n                !columnValues.includes(feature.properties[key]) &&\n                columnValues.push(\n                  feature.properties[key]\n                )\n              )\n            )\n            return <>\n              {humanize(key)}\n              <MultiSelect\n                title={\"Available (\" + columnValues.length + \")\"}\n                filter={key}\n                multiVarSelect={multiVarSelect}\n                // all string from here\n                values={columnValues.map(e => ({ id: e + \"\", value: e + \"\" }))}\n                onSelectCallback={(filter) => {\n                  typeof (onSelectCallback) === 'function' &&\n                    onSelectCallback(filter.selected || {});\n                }}\n                value={multiVarSelect[key] &&\n                  Array.from(multiVarSelect[key])\n                    .map(e => ({ id: e + \"\", value: e + \"\" }))\n                }\n              />\n            </>\n          })\n      }\n    </div>\n  )\n}","import React from 'react';\nimport { Table } from 'baseui/table';\nimport { Pagination } from 'baseui/pagination';\n\nimport { humanize } from '../utils';\n\nexport default function DataTable(props) {\n  const [currentPage, setCurrentPage] = React.useState(1);\n\n  const { data } = props;\n  if (!data || data.length === 0) return null\n  const numPages = Math.floor(data.length / 10)\n\n  const columns = Object.keys(data[0].properties)\n    .map(each => humanize(each))\n\n  const rows = data.slice(currentPage * 10, (currentPage * 10) + 10)\n    .map(feature => Object.keys(feature.properties).map(e =>\n      feature.properties[e]))\n\n  return (\n    <>\n      <Pagination\n        numPages={numPages}\n        currentPage={currentPage}\n        onPageChange={({ nextPage }) => {\n          setCurrentPage(Math.min(Math.max(nextPage, 1), numPages));\n        }}\n      />\n      <Table columns={columns} data={rows} />\n      {/* // not nice 1000px */}\n      <Pagination\n        numPages={numPages}\n        currentPage={currentPage}\n        onPageChange={({ nextPage }) => {\n          setCurrentPage(Math.min(Math.max(nextPage, 1), numPages));\n        }}\n      />\n    </>\n  )\n}","import React from 'react';\n\nimport { Slider } from 'baseui/slider';\nimport { Checkbox } from 'baseui/checkbox';\nimport { Button } from 'baseui/button';\nimport { StatefulButtonGroup } from 'baseui/button-group';\nimport { StatefulSelect, TYPE } from 'baseui/select';\n\nimport {\n  suggestUIforNumber, humanize\n} from '../utils';\n\nexport default class UI extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      checks: [],\n    }\n  }\n\n  render() {\n    const {\n      title, sublist, suggested, onChange, steps\n    } = this.props;\n    if (!title || !sublist || sublist.length === 0) return null;\n    const new_checks = this.state.checks;\n    const ui_name = suggested || suggestUIforNumber(sublist.length)\n    let ui_returned = null;\n    if (ui_name === \"checkbox\") {\n      ui_returned = <>\n        {\n          sublist.map((each, i) =>\n            // deal with each checked!\n            <Checkbox\n              key={each}\n              checked={this.state.checks[i]}\n              value={each}\n              onChange={() => {\n                new_checks[i] = !new_checks[i]\n                this.setState({\n                  checks: new_checks\n                })\n              }}>\n              {each}\n            </Checkbox>\n          )\n        }\n      </>\n    } else if (ui_name === \"slider\" && parseInt(sublist[0])) {\n      const s = sublist;\n      ui_returned =\n        <>\n          <Slider\n            value={this.state.value || [s[0]]}\n            min={parseInt(s[0])}\n            max={parseInt(s[s.length - 1])}\n            step={steps || 1} //something\n            onChange={({ value }) => {\n              this.setState({ value });\n              typeof (onChange) === 'function' && onChange(value[0])\n            }}\n          />\n          {title}\n        </>\n    } else if (ui_name === \"buttongroups\") {\n      ui_returned = <>\n        Checkbox Mode StatefulButtonGroup\n        <StatefulButtonGroup mode=\"checkbox\"\n          initialState={{ selected: [0] }}\n        >\n          {\n            sublist.map((each, i) =>\n              <Button\n                key={each + \"-\" + i}\n                value={each}\n                onClick={(e) => console.log(e.target.value)}>\n                {each}\n              </Button>\n            )\n          }\n        </StatefulButtonGroup>\n      </>\n    } else {\n      ui_returned = <StatefulSelect\n        options={sublist.map(each => ({ id: each }))}\n        labelKey=\"id\"\n        placeholder={\"Choose \" + humanize(title)}\n        type={TYPE.search}\n        onChange={event => \n          console.log(event && event.value[0] && event.value[0].id)\n        }\n      />\n    }\n    return ui_returned\n  }\n}","function define(name, value) {\n  Object.defineProperty(exports, name, {\n    value: value,\n    enumerable: true\n  });\n}\n\n// TODO: change to domain name \ndefine(\"PRD_URL\", 'https://layik.github.io/eAtlas');\ndefine(\"DEV_URL\", 'http://localhost:8000');\ndefine(\"UI_LIST\", [\n  \"checkbox\",\n  \"radio\",\n  \"buttongroups\",\n  \"dropdown\",\n  \"slider\"]) \ndefine(\"LAYERSTYLES\", [\n  \"arc\",\n  \"geojson\",\n  \"grid\",\n  \"heatmap\",\n  \"hex\",\n  \"icon\",\n  \"line\",\n  \"path\",\n  \"scatterplot\",\n  \"sgrid\",\n  \"barvis\"\n])     \n\n// define(\"GHURL\", \"https://layik.github.io/eAtlas\")\n// define(\"STATS19SAMPLEURL\", \n// \"https://github.com/layik/eAtlas/releases/download/0.0.1/stats19.json\")\n\ndefine(\"DECKGL_INIT\", {\n  longitude: -1.6362,\n  latitude: 53.8321,\n  zoom: 10,\n  pitch: 55,\n  bearing: 0,\n})\n\ndefine(\"LIGHT_SETTINGS\", {\n  lightsPosition: [-0.144528, 49.739968, 8000, -3.807751, 54.104682, 8000],\n  ambientRatio: 0.4,\n  diffuseRatio: 0.6,\n  specularRatio: 0.2,\n  lightsStrength: [0.8, 0.0, 0.8, 0.0],\n  numberOfLights: 2\n})\n\ndefine(\"PLOT_W\", 250)\n\ndefine(\"TURQUOISE_RANGE\", ['#12939A','#1293FF'])","import React, { useState } from 'react';\nimport { makeWidthFlexible, Treemap } from 'react-vis';\n\nimport { PLOT_W } from '../Constants';\n\nconst FlexibleTreemap = makeWidthFlexible(Treemap); \n\nconst H = PLOT_W;\n/**\n * props.data needs to be in this formard\n * {\n *    title: 'sometitle',\n *    color: 1,\n *    children: [1,2,3,4].map(e => ({\n *      name: e,\n *      size: Math.random() * 500,\n *      color: Math.random(),\n *      style: {\n *        border: 'thin solid red'\n *      }\n *     }\n *   ))\n * }\n * \n * @param {Object} props react props\n */\nexport default function TreeMap(props) {\n  const [hoveredNode, setHoveredNode] = useState(false)\n  const { data, plotStyle, title } = props;\n  \n  const treeProps = {\n    animation: {\n      damping: 9,\n      stiffness: 300\n    },\n    data,\n    onLeafMouseOver: x => setHoveredNode({ hoveredNode: x }),\n    onLeafMouseOut: () => setHoveredNode({ hoveredNode: false }),\n    // onLeafClick: () => this.setState({ treemapData: _getRandomData() }),\n    mode: 'squarify',\n    getLabel: x => x.name,\n    // see \n    // https://github.com/uber/react-vis/issues/262#issuecomment-281757385\n    width: plotStyle && plotStyle.width || H + 50,\n    height: plotStyle && plotStyle.height || H\n  };\n\n  if(!data || data.length === 0) return null;\n  return (\n    <div className=\"dynamic-treemap-example\">\n      <h6>{title}</h6>\n      {<FlexibleTreemap {...treeProps} />}\n        {hoveredNode && hoveredNode.value}\n    </div>\n  )\n}","import React, { useState, useEffect } from 'react';\nimport { Button, KIND, SIZE } from 'baseui/button';\nimport { Accordion, Panel } from 'baseui/accordion';\nimport { VerticalBarSeries, HorizontalBarSeries, LineSeries } from 'react-vis';\n\nimport MultiSelect from './MultiSelect';\nimport TreeMap from './TreeMap';\nimport { humanize } from '../utils';\nimport { isString, isNumber } from '../JSUtils';\nimport { xyObjectByProperty } from '../utils';\nimport SeriesPlot from './showcases/SeriesPlot';\n\nconst VIS = ['Vertical Bar', 'Horizontal Bar',\n  'Line', 'Pop. Pyramid', 'Treemap'];\n\n/**\n * Generate approprate series/marks for a React-vis\n * type from data and column name.\n * \n * @param {Object} data geojson features to generate counts from\n * @param {String} column name of column in feature to generate counts from\n * @param {String} vis type of visualization (react-vis type)\n * @param {Object} plotStyle styling of the plot (css)\n * @param {Boolean} noLimit boolean to crop chart\n * @param {Boolean} dark boolean to switch theme\n */\nfunction generateVIS(data, column, vis, plotStyle, noLimit, dark) {\n  if (!data || data.length === 0 || !isString(column) || !isString(vis)) {\n    return;\n  }\n  let counts = xyObjectByProperty(data, column)\n\n  if (vis === 'Treemap') {\n    return (\n      <TreeMap\n        plotStyle={plotStyle}\n        data={{\n          title: column + \" \" + vis,\n          color: 1,\n          children: counts.map((e, i) => ({\n            name: e.x,\n            size: +(e.y) / data.length,\n            color: isNumber(e.x) || i,\n            style: {\n              border: 'thin solid red'\n            }\n          }))\n        }}\n        title={humanize(column)}\n      />\n    )\n  }\n  if (vis.startsWith('Vertical') ||\n    vis.startsWith(\"Horizontal\") ||\n    vis.startsWith(\"Line\")) {\n    return (\n      <SeriesPlot\n        dark={dark}\n        noLimit={noLimit}\n        plotStyle={plotStyle}\n        data={counts}\n        type={\n          vis.startsWith(\"Vertical\") ?\n            VerticalBarSeries :\n            vis.startsWith(\"Horizontal\") ?\n              HorizontalBarSeries :\n              LineSeries\n        }\n        title={humanize(column)} noYAxis={true}\n      />\n    )\n  }\n}\nexport default function AddVIS(props) {\n  const [column, setColumn] = useState(false)\n  const [vis, setVis] = useState(false)\n  const [list, setList] = useState([]);\n  // useEffect(() => {\n  // if props.data changes only then it should react to it\n  // setVis(false);\n  // setColumn([])\n  // }, [props.data])\n\n  const { data, onSelectCallback, dark,\n    noAccordion, plotStyle, noLimit } = props;\n\n  if (!data || data.length === 0) return null;\n\n  const columns = Object.keys(data[0].properties);\n\n  return (\n    <div>\n      <h6>Generate graphs from columns</h6>\n      <div className=\"searchField\">\n        <MultiSelect\n          single={true}\n          title=\"Choose column\"\n          values={columns.map(e => ({ id: humanize(e), value: e }))}\n          onSelectCallback={(selected) => {\n            setColumn(selected);\n            typeof onSelectCallback === 'function' &&\n              onSelectCallback(selected)\n          }}\n          // sync state\n          value={column}\n        />\n        {column.length > 0 &&\n          <MultiSelect\n            single={true}\n            title=\"Choose vis\"\n            values={VIS.map(e => ({ id: e, value: e }))}\n            onSelectCallback={(selected) => {\n              setVis(selected)\n            }}\n            // sync state\n            value={vis}\n          />}\n      </div>\n      <Button\n        kind={KIND.secondary} size={SIZE.compact}\n        onClick={() => {\n          if (column.length === 0 || vis.length === 0 || !column[0]) return;\n          setList([\n            ...list,\n            generateVIS(data, column[0].value, vis[0].value, plotStyle, dark, noLimit)\n          ])\n        }}>Add</Button>\n      <div className=\"visArea\">\n        {!noAccordion ?\n          <Accordion\n            expanded={true}\n            onChange={({ expanded }) => console.log(expanded)}\n          >\n            {\n              list.map((plot, i) =>\n                <Panel key={'panel-' + i}>\n                  <Button\n                    kind={KIND.secondary} size={SIZE.compact}\n                    onClick={() => {\n                      setList(\n                        list.filter((e, j) => i !== j)\n                      )\n                    }}>X</Button>\n                  {plot}\n                </Panel>\n              )\n            }\n          </Accordion> :\n          <center>\n            {list.map((plot, i) =>\n              plot && \n              <div>\n                <Button\n                  kind={KIND.secondary} size={SIZE.compact}\n                  onClick={() => {\n                    setList(\n                      list.filter((e, j) => i !== j)\n                    )\n                  }}>X</Button>\n                {plot}\n              </div>)\n            }\n          </center>\n        }\n      </div>\n    </div >\n  )\n}","module.exports = __webpack_public_path__ + \"static/media/location-icon-atlas.37932833.png\";"],"sourceRoot":""}